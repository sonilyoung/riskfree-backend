<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.domain.notice.dao.NoticeDAO">
	
	<!-- 공지사항 목록 조회 -->
	<select id="getNoticeList" parameterType="egovframework.com.domain.notice.parameter.NoticeSearchParameter"
			resultType="egovframework.com.domain.notice.domain.Notice">
		<choose>
			<when test="roleCd == '000'">
				SELECT 
					COUNT(NOTICE_ID) OVER() AS TOTAL_COUNT
					 , COMPANY_ID
					 , NOTICE_ID
					 , TITLE
					 , attachId
					 , INSERT_NAME
					 , INSERT_DATE
					 , VIEW_CNT
					 , importCd
				FROM(
					SELECT 
						 COMPANY_ID
						 , NOTICE_ID
						 , TITLE
						 , ATTACH_ID as attachId
						 , get_user_nm(insert_id) AS INSERT_NAME
						 , TO_CHAR(INSERT_DATE, 'YY-MM-DD') AS INSERT_DATE
						 , VIEW_CNT
						 , IMPORT_010_CD AS importCd
					  FROM RFT_NOTICE RN 
					 WHERE COMPANY_ID = #{companyId}
					   AND IS_DELETE = 0
				   <if test="workplaceId != null and workplaceId != '' ">
					   AND WORKPLACE_ID = #{workplaceId}
				    </if>
					<if test="col eq 'title'.toString()">
					   AND lower(TITLE) like lower('%${param}%')
					</if>
					<if test="col eq 'name'.toString()">
					   AND get_user_nm(insert_id) like '%${param}%'
					</if>
					<if test="col eq 'all'.toString()">
					   AND (get_user_nm(insert_id) like '%${param}%' OR lower(TITLE) like lower('%${param}%'))
					</if>
					ORDER BY NOTICE_ID DESC
				) TOT				
			</when>
			<otherwise>
				SELECT 
					COUNT(NOTICE_ID) OVER() AS TOTAL_COUNT
					 , COMPANY_ID
					 , NOTICE_ID
					 , TITLE
					 , attachId
					 , INSERT_NAME
					 , INSERT_DATE
					 , VIEW_CNT
					 , importCd
				FROM(
					SELECT  
						 COMPANY_ID
						 , NOTICE_ID
						 , TITLE
						 , ATTACH_ID as attachId
						 , get_user_nm(insert_id) AS INSERT_NAME
						 , TO_CHAR(INSERT_DATE, 'YY-MM-DD') AS INSERT_DATE
						 , VIEW_CNT
						 , IMPORT_010_CD AS importCd			
					FROM RFT_NOTICE 
					WHERE (INSERT_ID IN (SELECT USER_ID FROM RFT_USER WHERE ROLE_003_CD = '000') 
					OR UPDATE_ID IN (SELECT USER_ID FROM RFT_USER WHERE ROLE_003_CD = '000'))
					AND IS_DELETE = 0
				   <if test="workplaceId != null and workplaceId != '' ">
					   AND WORKPLACE_ID = #{workplaceId}
				    </if>
					<if test="col eq 'title'.toString()">
					   AND lower(TITLE) like lower('%${param}%')
					</if>
					<if test="col eq 'name'.toString()">
					   AND get_user_nm(insert_id) like '%${param}%'
					</if>
					<if test="col eq 'all'.toString()">
					   AND (get_user_nm(insert_id) like '%${param}%' OR lower(TITLE) like lower('%${param}%'))
					</if>					
					UNION ALL	
					SELECT 
						 COMPANY_ID
						 , NOTICE_ID
						 , TITLE
						 , ATTACH_ID as attachId
						 , get_user_nm(insert_id) AS INSERT_NAME
						 , TO_CHAR(INSERT_DATE, 'YY-MM-DD') AS INSERT_DATE
						 , VIEW_CNT
						 , IMPORT_010_CD AS importCd
					  FROM RFT_NOTICE RN 
					 WHERE COMPANY_ID = #{companyId}
					   AND IS_DELETE = 0
				   <if test="workplaceId != null and workplaceId != '' ">
					   AND WORKPLACE_ID = #{workplaceId}
				    </if>
					<if test="col eq 'title'.toString()">
					   AND lower(TITLE) like lower('%${param}%')
					</if>
					<if test="col eq 'name'.toString()">
					   AND get_user_nm(insert_id) like '%${param}%'
					</if>
					<if test="col eq 'all'.toString()">
					   AND (get_user_nm(insert_id) like '%${param}%' OR lower(TITLE) like lower('%${param}%'))
					</if>
					ORDER BY NOTICE_ID DESC
				) TOT
			</otherwise>			
		</choose>			
			

		<include refid="egovframework.com.domain.common.commonSql.page-1" />
	</select>
	
	<!-- 공지사항 등록 -->
	<insert id="insertNotice" parameterType="egovframework.com.domain.notice.parameter.NoticeParameter" useGeneratedKeys="true" keyProperty="noticeId">
		INSERT INTO RFT_NOTICE
		(COMPANY_ID, TITLE, IMPORT_010_CD, "content", ATTACH_ID, VIEW_CNT, IS_ENABLE, IS_DELETE, INSERT_ID, INSERT_DATE, UPDATE_ID, UPDATE_DATE, WORKPLACE_ID)
		VALUES(#{companyId}, #{title}, #{importCd}, #{content}, #{attachId}, 0, 1, 0, #{insertId}, now(), #{updateId}, now(), #{workplaceId})
	</insert>
	
	<!-- 공지사항 상세보기 -->
	<select id="getNotice" parameterType="HashMap" resultType="egovframework.com.domain.notice.domain.Notice">
		SELECT 
			   COMPANY_ID
			 , NOTICE_ID
			 , TITLE
			 , GET_USER_NM(INSERT_ID) AS INSERT_NAME
			 , TO_CHAR(INSERT_DATE, 'YY-MM-DD') AS INSERT_DATE
			 , VIEW_CNT
			 , "content"
			 , rn.ATTACH_ID
			 , rafd.original_filename 
			 , rafd.file_path 
			 , import_010_cd as importCd
		  FROM RFT_NOTICE rn
		  LEFT OUTER JOIN RFT_ATTACH_FILE_DETAIL RAFD ON (RAFD.ATTACH_FILE_ID = RN.ATTACH_ID)
		 WHERE 
		   NOTICE_ID = #{noticeId}
		   AND IS_DELETE = 0
	</select>
	
	<!-- 공지사항 조회수 증가 -->
	<update id="updateViewCount" parameterType="egovframework.com.domain.notice.domain.Notice">
		UPDATE RFT_NOTICE 
		   SET VIEW_CNT = VIEW_CNT + 1
		 WHERE COMPANY_ID = #{companyId}
		   AND NOTICE_ID = #{noticeId}
		<selectKey keyProperty="viewCnt" resultType="int" order="AFTER">
			SELECT VIEW_CNT AS viewCnt FROM RFT_NOTICE
			 WHERE 
		   	   NOTICE_ID = #{noticeId}
		</selectKey>		 
	</update>
	
	<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="egovframework.com.domain.notice.parameter.NoticeParameter">
		UPDATE RFT_NOTICE
		   SET TITLE = #{title}
		     , IMPORT_010_CD = #{importCd}
		     , "content" = #{content}
		     , ATTACH_ID = #{attachId}
		     , UPDATE_ID = #{updateId}
		     , UPDATE_DATE = now()
  	     WHERE 
    	   NOTICE_ID = #{noticeId}
    	   AND IS_DELETE = 0
	</update>
	
	<!--  공지사항 삭제 -->
	<update id="deleteNotice" parameterType="HashMap">
		UPDATE RFT_NOTICE
		   SET IS_DELETE = 1
		 WHERE 
		   NOTICE_ID = #{noticeId}
	</update>
	 
</mapper>