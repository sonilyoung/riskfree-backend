<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.domain.education.dao.EduCoursDAO">

	<select id="getListCount" parameterType="egovframework.com.domain.education.parameter.EduCoursSearchParameter" resultType="Long">
		SELECT 
			COUNT(*) AS TOTAL_COUNT
		FROM EDU_COURS EC
			JOIN EDU_CLASS EL ON (EL.EDU_CLASS_ID = EC.EDU_CLASS_ID)
			JOIN EDU_TYPE ET ON (ET.EDU_TYPE_ID = EL.EDU_TYPE_ID)
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData)">
			<if test="searchData.eduTypeId != null and searchData.eduTypeId != 0">
				AND ET.EDU_TYPE_ID = #{searchData.eduTypeId}
			</if> 
			<if test="searchData.eduClassSeq != null and searchData.eduClassSeq != 0">
				AND EC.EDU_CLASS_SEQ = #{searchData.eduClassSeq}
			</if>
			<if test="searchData.eduClassId != null and searchData.eduClassId != 0">
				AND EL.EDU_CLASS_ID = #{searchData.eduClassId}
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduStartDt)">
				AND EC.EDU_CRS_START_DT <![CDATA[ >= ]]> #{searchData.eduStartDt}::date 
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduEndDt)">
				AND EC.EDU_CRS_END_DT <![CDATA[ < ]]> #{searchData.eduEndDt}::date + interval '1 day'
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduLecturerName)">
				AND UPPER(EC.EDU_CRS_LCTR_NAME) LIKE UPPER(CONCAT('%',TRIM(#{searchData.eduLecturerName}),'%'))
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduPlaceCd)">
				AND EC.EDU_CRS_502_CD = #{searchData.eduPlaceCd} 
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduPeriodCd)">
				AND EC.EDU_CRS_501_CD = #{searchData.eduPeriodCd} 
			</if>
		</if>
		<!-- <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(useYn)">
		AND EC.USE_YN = #{useYn}
       	</if>  -->
	</select>
	
	<select id="getList" parameterType="egovframework.com.domain.education.parameter.EduCoursSearchParameter" 
			resultType="egovframework.com.domain.education.domain.EduCours">
		SELECT 
			EC.EDU_CRS_ID AS EDU_COURSE_ID,
			TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') AS EDU_YEAR,
			EC.EDU_CLASS_ID AS EDU_CLASS_ID,
			EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			(SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			(SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			EC.EDU_CRS_REG_START_DT AS EDU_START_DT,
			EC.EDU_CRS_REG_END_DT AS EDU_END_DT,
			EC.EDU_CRS_START_DT AS EDU_START_DT,
			TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			EC.EDU_CRS_END_DT AS EDU_END_DT,
			TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID,
			EC.USE_YN AS USE_YN,
			EC.REG_DT AS REG_DATE,
			TO_CHAR(EC.REG_DT,'YYYY-MM-DD') AS REG_DATE_YMD,
			EC.UPD_DT AS UPD_DATE,
			TO_CHAR(EC.UPD_DT,'YYYY-MM-DD') AS UPD_DATE_YMD,
			EL.EDU_CLASS_500_CD as EDU_CLASS_TARGET_CD ,
			(SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
			EL.EDU_CLASS_NAME, 
			ET.EDU_TYPE_NAME,
			ET.EDU_TYPE_ID
		FROM EDU_COURS EC
			JOIN EDU_CLASS EL ON (EL.EDU_CLASS_ID = EC.EDU_CLASS_ID)
			JOIN EDU_TYPE ET ON (ET.EDU_TYPE_ID = EL.EDU_TYPE_ID)
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData)">
			<if test="searchData.eduTypeId != null and searchData.eduTypeId != 0">
				AND ET.EDU_TYPE_ID = #{searchData.eduTypeId}
			</if> 
			<if test="searchData.eduClassSeq != null and searchData.eduClassSeq != 0">
				AND EC.EDU_CLASS_SEQ = #{searchData.eduClassSeq}
			</if>
			<if test="searchData.eduClassId != null and searchData.eduClassId != 0">
				AND EL.EDU_CLASS_ID = #{searchData.eduClassId}
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduStartDt)">
				AND EC.EDU_CRS_START_DT <![CDATA[ >= ]]> #{searchData.eduStartDt}::date 
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduEndDt)">
				AND EC.EDU_CRS_END_DT <![CDATA[ < ]]> #{searchData.eduEndDt}::date + interval '1 day'
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduLecturerName)">
				AND UPPER(EC.EDU_CRS_LCTR_NAME) LIKE UPPER(CONCAT('%',TRIM(#{searchData.eduLecturerName}),'%'))
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduPlaceCd)">
				AND EC.EDU_CRS_502_CD = #{searchData.eduPlaceCd} 
			</if>
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(searchData.eduPeriodCd)">
				AND EC.EDU_CRS_501_CD = #{searchData.eduPeriodCd} 
			</if>
		</if>
	<!-- 	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(useYn)">
		AND EC.USE_YN = #{useYn}
       	</if> -->
		ORDER BY EC.EDU_CRS_ID
		<if test="currentPageNum != null and currentPageNum != 0 and countPerPage != null and countPerPage != 0">
		LIMIT #{countPerPage} OFFSET ((#{currentPageNum} - 1) * #{countPerPage})
       	</if>
	</select>
	
	<select id="getListExcel" parameterType="egovframework.com.domain.education.parameter.EduCoursSearchParameter" 
			resultType="egovframework.com.domain.education.domain.EduCours">
		SELECT 
			EC.EDU_CRS_ID AS EDU_COURSE_ID,
			TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') AS EDU_YEAR,
			EC.EDU_CLASS_ID AS EDU_CLASS_ID,
			EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			(SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			(SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			EC.EDU_CRS_REG_START_DT AS EDU_START_DT,
			EC.EDU_CRS_REG_END_DT AS EDU_END_DT,
			EC.EDU_CRS_START_DT AS EDU_START_DT,
			TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			EC.EDU_CRS_END_DT AS EDU_END_DT,
			TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID,
			EC.USE_YN AS USE_YN,
			EC.REG_DT AS REG_DATE,
			TO_CHAR(EC.REG_DT,'YYYY-MM-DD') AS REG_DATE_YMD,
			EC.UPD_DT AS UPD_DATE,
			TO_CHAR(EC.UPD_DT,'YYYY-MM-DD') AS UPD_DATE_YMD,
			EL.EDU_CLASS_500_CD as EDU_CLASS_TARGET_CD ,
			(SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
			EL.EDU_CLASS_NAME, 
			ET.EDU_TYPE_NAME,
			ET.EDU_TYPE_ID
		FROM EDU_COURS EC
			JOIN EDU_CLASS EL ON (EL.EDU_CLASS_ID = EC.EDU_CLASS_ID)
			JOIN EDU_TYPE ET ON (ET.EDU_TYPE_ID = EL.EDU_TYPE_ID)
		WHERE 1=1
	<!-- 	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(useYn)">
		AND EC.USE_YN = #{useYn}
       	</if> -->
		ORDER BY EC.EDU_CRS_ID
	</select>
	
	<select id="get" parameterType="Long" resultType="egovframework.com.domain.education.domain.EduCours">
		SELECT 
			EC.EDU_CRS_ID AS EDU_COURSE_ID,
			TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') AS EDU_YEAR,
			EC.EDU_CLASS_ID AS EDU_CLASS_ID,
			EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			(SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			(SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			EC.EDU_CRS_REG_START_DT AS EDU_START_DT,
			EC.EDU_CRS_REG_END_DT AS EDU_END_DT,
			EC.EDU_CRS_START_DT AS EDU_START_DT,
			TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			EC.EDU_CRS_END_DT AS EDU_END_DT,
			TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID,
			EC.USE_YN AS USE_YN,
			EC.REG_DT AS REG_DATE,
			TO_CHAR(EC.REG_DT,'YYYY-MM-DD') AS REG_DATE_YMD,
			EC.UPD_DT AS UPD_DATE,
			TO_CHAR(EC.UPD_DT,'YYYY-MM-DD') AS UPD_DATE_YMD,
			EL.EDU_CLASS_500_CD as EDU_CLASS_TARGET_CD ,
			(SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
			EL.EDU_CLASS_NAME, 
			ET.EDU_TYPE_NAME,
			ET.EDU_TYPE_ID
		FROM EDU_COURS EC
			JOIN EDU_CLASS EL ON (EL.EDU_CLASS_ID = EC.EDU_CLASS_ID)
			JOIN EDU_TYPE ET ON (ET.EDU_TYPE_ID = EL.EDU_TYPE_ID)
		WHERE 1=1
		AND EC.EDU_CRS_ID = #{id}
	</select>
	
	<insert id="insert" parameterType="egovframework.com.domain.education.parameter.EduCoursParameter" useGeneratedKeys="true" keyProperty="eduCourseId">
		INSERT INTO EDU_COURS
		(
			EDU_CLASS_ID,
			EDU_CLASS_SEQ,
			EDU_CRS_LCTR_NAME,
			EDU_CRS_501_CD,
			EDU_CRS_502_CD,
			EDU_CRS_REG_START_DT,
			EDU_CRS_REG_END_DT,
			EDU_CRS_START_DT,
			EDU_CRS_END_DT,
			EDU_CRS_RSLT_FILE_ID,
			USE_YN,
			REG_DT,
			UPD_DT
		)
		VALUES
		(
    		#{eduClassId},
    		#{eduClassSeq},
    		#{eduLecturerName},
    		#{eduPeriodCd},
    		#{eduPlaceCd},
    		#{eduStartDt},
    		#{eduEndDt},
    		#{eduStartDt},
    		#{eduEndDt},
    		#{eduCoursRsltFileId},
			<!-- #{useYn},-->
			'Y',
			NOW(),
			NOW()
		)
	</insert>
	
	<update id="update" parameterType="egovframework.com.domain.education.parameter.EduCoursParameter">
		UPDATE EDU_COURS
		SET
			EDU_CLASS_ID = #{eduClassId},
			EDU_CLASS_SEQ = #{eduClassSeq},
			EDU_CRS_LCTR_NAME = #{eduLecturerName},
			EDU_CRS_501_CD = #{eduPeriodCd},
			EDU_CRS_502_CD = #{eduPlaceCd},
			EDU_CRS_REG_START_DT = #{eduStartDt},
			EDU_CRS_REG_END_DT = #{eduEndDt},
			EDU_CRS_START_DT = #{eduStartDt},
			EDU_CRS_END_DT = #{eduEndDt},
			EDU_CRS_RSLT_FILE_ID = #{eduCoursRsltFileId},
			<!-- USE_YN = #{useYn}, -->
			UPD_DT = NOW()
		WHERE EDU_CRS_ID = #{eduCourseId}
	</update>
	
	<delete id="delete" parameterType="Long">
		DELETE FROM EDU_COURS
		WHERE EDU_CRS_ID = #{id}
	</delete>
	
	<delete id="deleteArr" parameterType="List">
		DELETE FROM EDU_COURS
		WHERE EDU_CRS_ID in
		<foreach collection="list" item="idList" open="(" close=")" separator=",">
			#{idList} 
		</foreach>
	</delete>
	
	<select id="getEduCourse" parameterType="String" resultType="egovframework.com.domain.education.domain.PlanDB">
		SELECT 
		       EL.EDU_CLASS_ID,
			   EL.EDU_TYPE_ID,
			   EL.EDU_CLASS_NAME,
			   EL.EDU_CLASS_500_CD AS EDU_CLASS_TARGET_CD,
	 	       (SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
	  	       EL.EDU_CLASS_HRS AS EDU_CLASS_HOURS,
			   EL.EDU_CLASS_HR_HRS AS EDU_CLASS_HR_HOURS,
			   EL.EDU_CLASS_FILE_ID,
			   EL.USE_YN,
			   EC.EDU_CRS_ID AS EDU_COURSE_ID,
			   EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			   EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			   EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			   (SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			   EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			   (SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			   EC.EDU_CRS_START_DT AS EDU_START_DT,
			   TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			   EC.EDU_CRS_END_DT AS EDU_END_DT,
			   TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			   EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID,
			   EC.USE_YN AS USE_YN
		  FROM EDU_CLASS EL , EDU_COURS EC 
	     WHERE EL.EDU_CLASS_ID  = EC.EDU_CLASS_ID
	       AND TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') = #{ccyy}
	       AND EC.USE_YN = 'Y'
	     ORDER BY EL.EDU_CLASS_ID, EC.EDU_CRS_ID
	</select>
	
	<select id="getEduCCoursesByEduType" parameterType="hashmap" resultType="egovframework.com.domain.education.domain.PlanDB">
	    SELECT  
		       EL.EDU_CLASS_ID,
			   EL.EDU_TYPE_ID,
			   EL.EDU_CLASS_NAME,
			   EL.EDU_CLASS_500_CD AS EDU_CLASS_TARGET_CD,
	 	       (SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
	  	       EL.EDU_CLASS_HRS AS EDU_CLASS_HOURS,
			   EL.EDU_CLASS_HR_HRS AS EDU_CLASS_HR_HOURS,
			   EL.EDU_CLASS_FILE_ID,
			   EL.USE_YN,
			   EC.EDU_CRS_ID AS EDU_COURSE_ID,
			   EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			   EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			   EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			   (SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			   EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			   (SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			   EC.EDU_CRS_START_DT AS EDU_START_DT,
			   TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			   EC.EDU_CRS_END_DT AS EDU_END_DT,
			   TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			   EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID,
			   EC.USE_YN AS USE_YN
		  FROM EDU_CLASS EL , EDU_COURS EC 
	     WHERE EL.EDU_CLASS_ID  = EC.EDU_CLASS_ID
	       AND TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') = #{ccyy}
	       AND EL.EDU_TYPE_ID = #{eduTypeId}::integer
	       AND EC.USE_YN = 'Y'
	     ORDER BY EL.EDU_CLASS_ID, EC.EDU_CRS_ID
	</select>
	
	<insert id="insertRegistedClasses" parameterType="HashMap">
		<selectKey keyProperty="id" resultType="long" order="BEFORE">
		 	SELECT NEXTVAL('EDU_COURS_RSLT_ID_SEQ') AS id
		</selectKey>
		INSERT INTO EDU_COURS_RSLT 
		(
			EDU_CRS_RSLT_ID,
         	EDU_USER_ID, 
         	EDU_CRS_ID, 
         	EDU_CRS_503_CD, 
         	EDU_START_DT, 
         	EDU_END_DT, 
         	EDU_PRGRSS_RATE
         ) 
         VALUES 
         (
         	#{id},
         	#{userId}::INTEGER,
         	#{eduCourseId}::INTEGER,
         	'001',
         	null,
         	null,
         	0
         )
	</insert>
	
	<update id="updateTakenClasses" parameterType="HashMap">
		UPDATE EDU_COURS_RSLT 
		   SET EDU_CRS_503_CD = '002',
        	   EDU_START_DT = NOW()
	     WHERE 1=1
	       AND EDU_USER_ID = #{userId}::INTEGER
	       AND EDU_CRS_ID = #{eduCourseId}::INTEGER
	</update>
	
	<update id="updateFinishedClasses" parameterType="HashMap">
		UPDATE EDU_COURS_RSLT 
		   SET EDU_CRS_503_CD = '003',
        	   EDU_END_DT = NOW(),
        	   EDU_PRGRSS_RATE = 100
	     WHERE 1=1
	       AND EDU_USER_ID = #{userId}::INTEGER
	       AND EDU_CRS_ID = #{eduCourseId}::INTEGER
	</update>
	
	<update id="updateProgress" parameterType="HashMap">
		UPDATE EDU_COURS_RSLT 
		   SET EDU_PRGRSS_RATE = #{progress}::NUMERIC
         WHERE 1=1
           AND EDU_USER_ID = #{userId}::INTEGER
	       AND EDU_CRS_ID = #{eduCourseId}::INTEGER
	</update>
	
	<select id="getRegistedClasses" parameterType="HashMap" resultType="egovframework.com.domain.education.domain.PlanDB">
		SELECT 
			   ECR.EDU_CRS_RSLT_ID,
			   ECR.EDU_USER_ID,
			   ECR.EDU_PRGRSS_RATE,
			   EL.EDU_CLASS_ID,
			   EL.EDU_TYPE_ID,
			   EL.EDU_CLASS_NAME,
			   EL.EDU_CLASS_500_CD AS EDU_CLASS_TARGET_CD,
		       (SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
		       EL.EDU_CLASS_HRS AS EDU_CLASS_HOURS,
			   EL.EDU_CLASS_HR_HRS AS EDU_CLASS_HR_HOURS,
			   EL.EDU_CLASS_FILE_ID,
			   EC.EDU_CRS_ID AS EDU_COURSE_ID,
			   EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			   EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			   EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			   (SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			   EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			   (SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			   EC.EDU_CRS_START_DT AS EDU_START_DT,
			   TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			   EC.EDU_CRS_END_DT AS EDU_END_DT,
			   TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			   EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID
		  FROM EDU_COURS_RSLT ECR
		  JOIN EDU_COURS EC ON (ECR.EDU_CRS_ID = EC.EDU_CRS_ID)
		  JOIN EDU_CLASS EL ON (EC.EDU_CLASS_ID = EL.EDU_CLASS_ID)
		 WHERE ECR.EDU_USER_ID = #{userId}::INTEGER
		   AND ECR.EDU_CRS_503_CD = '001'
		   AND TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') = #{ccyy}
	</select>
	
	<select id="getTakenClasses" parameterType="HashMap" resultType="egovframework.com.domain.education.domain.PlanDB">
		SELECT 
			   ECR.EDU_CRS_RSLT_ID,
			   ECR.EDU_USER_ID,
			   ECR.EDU_PRGRSS_RATE,
			   EL.EDU_CLASS_ID,
			   EL.EDU_TYPE_ID,
			   EL.EDU_CLASS_NAME,
			   EL.EDU_CLASS_500_CD AS EDU_CLASS_TARGET_CD,
		       (SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
		       EL.EDU_CLASS_HRS AS EDU_CLASS_HOURS,
			   EL.EDU_CLASS_HR_HRS AS EDU_CLASS_HR_HOURS,
			   EL.EDU_CLASS_FILE_ID,
			   EC.EDU_CRS_ID AS EDU_COURSE_ID,
			   EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			   EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			   EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			   (SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			   EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			   (SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			   EC.EDU_CRS_START_DT AS EDU_START_DT,
			   TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			   EC.EDU_CRS_END_DT AS EDU_END_DT,
			   TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			   EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID
		  FROM EDU_COURS_RSLT ECR
		  JOIN EDU_COURS EC ON (ECR.EDU_CRS_ID = EC.EDU_CRS_ID)
		  JOIN EDU_CLASS EL ON (EC.EDU_CLASS_ID = EL.EDU_CLASS_ID)
		 WHERE ECR.EDU_USER_ID = #{userId}::INTEGER
		   AND ECR.EDU_CRS_503_CD = '002'
		   AND TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') = #{ccyy}
	</select>
	
	<select id="getFinishedClasses" parameterType="HashMap" resultType="egovframework.com.domain.education.domain.PlanDB">
		SELECT 
			   ECR.EDU_CRS_RSLT_ID,
			   ECR.EDU_USER_ID,
			   ECR.EDU_PRGRSS_RATE,
			   EL.EDU_CLASS_ID,
			   EL.EDU_TYPE_ID,
			   EL.EDU_CLASS_NAME,
			   EL.EDU_CLASS_500_CD AS EDU_CLASS_TARGET_CD,
		       (SELECT GET_COMM_NM('500', EL.EDU_CLASS_500_CD)) AS EDU_CLASS_TARGET_NAME,
		       EL.EDU_CLASS_HRS AS EDU_CLASS_HOURS,
			   EL.EDU_CLASS_HR_HRS AS EDU_CLASS_HR_HOURS,
			   EL.EDU_CLASS_FILE_ID,
			   EC.EDU_CRS_ID AS EDU_COURSE_ID,
			   EC.EDU_CLASS_SEQ AS EDU_CLASS_SEQ,
			   EC.EDU_CRS_LCTR_NAME AS EDU_LECTURER_NAME,
			   EC.EDU_CRS_501_CD AS EDU_PERIOD_CD,
			   (SELECT GET_COMM_NM('501', EC.EDU_CRS_501_CD)) AS EDU_PERIOD_NAME,
			   EC.EDU_CRS_502_CD AS EDU_PLACE_CD,
			   (SELECT GET_COMM_NM('502', EC.EDU_CRS_502_CD)) AS EDU_PLACE_NAME,
			   EC.EDU_CRS_START_DT AS EDU_START_DT,
			   TO_CHAR(EC.EDU_CRS_START_DT,'YYYY-MM-DD') AS EDU_START_YMD,
			   EC.EDU_CRS_END_DT AS EDU_END_DT,
			   TO_CHAR(EC.EDU_CRS_END_DT,'YYYY-MM-DD') AS EDU_END_YMD,
			   EC.EDU_CRS_RSLT_FILE_ID AS EDU_COURS_RSLT_FILE_ID
		  FROM EDU_COURS_RSLT ECR
		  JOIN EDU_COURS EC ON (ECR.EDU_CRS_ID = EC.EDU_CRS_ID)
		  JOIN EDU_CLASS EL ON (EC.EDU_CLASS_ID = EL.EDU_CLASS_ID)
		 WHERE ECR.EDU_USER_ID = #{userId}::INTEGER
		   AND ECR.EDU_CRS_503_CD = '003'
		   AND TO_CHAR(EC.EDU_CRS_START_DT,'YYYY') = #{ccyy}
	</select>
</mapper>