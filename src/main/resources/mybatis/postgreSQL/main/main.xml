<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.com.domain.main.dao.MainDAO">


	<!-- 스케일 정보 조회 -->
	<select id="getScaleInfo" resultType="egovframework.com.domain.main.domain.Company">
		SELECT 
		 	 SCALE_001_CD AS SCALE_CD
			 ,GET_COMM_NM('001',SCALE_001_CD) AS SCALE
		FROM RISK_FREE.RFT_WORKPLACE
		WHERE SCALE_001_CD IS NOT NULL AND SECTOR_002_CD IS NOT NULL
		AND COMPANY_ID = #{companyId}
		GROUP BY SCALE_001_CD, SECTOR_002_CD
	</select>
	


	<!-- 업종 정보 조회 -->
	<select id="getSectorInfo" resultType="egovframework.com.domain.main.domain.Company">
		SELECT 
		 	 SECTOR_002_CD AS SECTOR_CD
			 , GET_COMM_NM('002',SECTOR_002_CD) AS SECTOR			 
		 FROM risk_free.rft_workplace
		 WHERE SCALE_001_CD IS NOT NULL AND SECTOR_002_CD IS NOT NULL
		 AND COMPANY_ID = #{companyId}
		 GROUP BY SCALE_001_CD, SECTOR_002_CD
	</select>


	<!-- 메인탑 회사정보 -->
	<select id="getCompanyInfo" parameterType="Long" resultType="egovframework.com.domain.main.domain.Company">
		SELECT 				
			 RC.COMPANY_ID 
			 , RC.COMPANY_NAME			 
			 , RW.SH_GOAL 
			 , GET_COMM_NM('001',SCALE_001_CD) AS SCALE
			 , GET_COMM_NM('002',SECTOR_002_CD) AS SECTOR			 
			 , RW.MANAGEMENT_POLICY
			 , CONCAT(FILE_STRE_COURS, '/' ,STRE_FILE_NM) AS LOGO_IMG
			 , STRE_FILE_NM
			 , TO_CHAR(CONTRACT_START_DATE, 'YYYY-MM-DD') as CONTRACT_START_DATE
			 , TO_CHAR(CONTRACT_END_DATE, 'YYYY-MM-DD') as CONTRACT_END_DATE
		 FROM RISK_FREE.RFT_COMPANY RC LEFT JOIN RISK_FREE.RFT_WORKPLACE RW  ON RC.COMPANY_ID  = RW.COMPANY_ID
		 LEFT JOIN RISK_FREE.CO_ATTACH CA ON RC.LOGO_ID  = CA.ATCH_FILE_ID 
		 LEFT JOIN RISK_FREE.CO_ATTACH_DETAIL CAD ON CA.ATCH_FILE_ID  = CAD.ATCH_FILE_ID
		 WHERE RC.COMPANY_ID = #{companyId}
		<choose>
			<when test="workplaceId != null and workplaceId != ''">
				AND RW.WORKPLACE_ID = #{workplaceId}
			</when>
			<otherwise>
				LIMIT 1
			</otherwise>			
		</choose>			 
		  
	</select>
	
	<!-- 사업장정보 목록 -->
	<select id="getWorkplaceList" parameterType="egovframework.com.domain.main.domain.Company" resultType="egovframework.com.domain.main.domain.Workplace">
		SELECT 
			   RW.COMPANY_ID
			 , RW.WORKPLACE_ID 
			 , RW.WORKPLACE_NAME
		FROM RISK_FREE.RFT_WORKPLACE RW 
			JOIN RISK_FREE.RFT_USER RU ON (RW.WORKPLACE_ID = RU.WORKPLACE_ID)
		WHERE 1=1
		<choose>
			<when test="roleCd == '003'">
				AND RW.COMPANY_ID = #{companyId}
				AND RW.WORKPLACE_ID = #{workplaceId}
			</when>
			<otherwise>
				AND RW.COMPANY_ID = #{companyId}
			</otherwise>			
		</choose>		
		
		GROUP BY RW.COMPANY_ID
		 , RW.WORKPLACE_ID 
		 , RW.WORKPLACE_NAME				 
		ORDER BY RW.WORKPLACE_ID 
	</select>
	
	
	<!-- 최신 관리차수 조회 버튼 사용유무 확인 IS_CLOSE 현재진행중인 차수 정보 가져오기-->
	<select id="getRecentBaseline" parameterType="egovframework.com.domain.main.domain.Baseline"
			resultType="egovframework.com.domain.main.domain.Baseline">
		SELECT 
			   COMPANY_ID
		     , BASELINE_ID 
		     , BASELINE_NAME
		     , TO_CHAR(BASELINE_START, 'YYYY-MM-DD') AS BASELINE_START
		     , TO_CHAR(BASELINE_END, 'YYYY-MM-DD') AS BASELINE_END
		     , IS_CLOSE
		  FROM RFT_BASELINE  
		 WHERE COMPANY_ID = #{companyId}
			<if test="baselineId != null and baselineId != '' ">
			   AND BASELINE_ID = #{baselineId}
			</if>		 
		 AND IS_DELETE = 0 AND IS_CLOSE = 0
		 AND NOW() BETWEEN BASELINE_START AND BASELINE_END
		 ORDER BY BASELINE_ID DESC
		 LIMIT 1 
	</select>			
	
	<!-- 관리차수 조회 -->	 
	<select id="getBaseline" parameterType="egovframework.com.domain.main.domain.Baseline"
			resultType="egovframework.com.domain.main.domain.Baseline">
		SELECT 
			   COMPANY_ID
		     , BASELINE_ID 
		     , BASELINE_NAME
		     , TO_CHAR(BASELINE_START, 'YYYY-MM-DD') AS BASELINE_START
		     , TO_CHAR(BASELINE_END, 'YYYY-MM-DD') AS BASELINE_END
		     , LEAD(BASELINE_ID::INT,1,0) OVER(ORDER BY BASELINE_ID DESC) AS PREV_BASELINE
		     , LAG(BASELINE_ID::INT,1,0) OVER(ORDER BY BASELINE_ID DESC) AS NEXT_BASELINE		     
		  FROM RFT_BASELINE  
		 WHERE COMPANY_ID = #{companyId} 
		   
		 <if test="baselineId != null and baselineId != '' ">
		   AND BASELINE_ID  = #{baselineId}
		 </if>		 
		   
		 AND IS_DELETE = 0
		 AND IS_CLOSE = 0		
		 ORDER BY BASELINE_ID DESC
		 LIMIT 1
	</select>	
	
	
	<!-- 관리차수 조회 다음 이전-->	 
	<select id="getBaselineList" parameterType="egovframework.com.domain.main.domain.Baseline"
			resultType="egovframework.com.domain.main.domain.Baseline">
		SELECT 
			   COMPANY_ID
		     , BASELINE_ID 
		     , BASELINE_NAME
		     , TO_CHAR(BASELINE_START, 'YYYY-MM-DD') AS BASELINE_START
		     , TO_CHAR(BASELINE_END, 'YYYY-MM-DD') AS BASELINE_END
		     , LEAD(BASELINE_ID::INT,1,0) OVER(ORDER BY BASELINE_ID DESC) AS PREV_BASELINE
		     , LAG(BASELINE_ID::INT,1,0) OVER(ORDER BY BASELINE_ID DESC) AS NEXT_BASELINE
		  FROM RFT_BASELINE  
		 WHERE COMPANY_ID = #{companyId} 
		   
		<if test="baselineId != null and baselineId != '' ">
		   AND BASELINE_ID = #{baselineId}
		</if>	   
		   
		 AND IS_DELETE = 0
		 AND IS_CLOSE = 0		
		 ORDER BY BASELINE_ID DESC
	</select>
	
	
	<!-- 공지사항 hot 목록 조회 -->
	<select id="getNoticeHotList" parameterType="egovframework.com.domain.main.domain.Notice"
			resultType="egovframework.com.domain.main.domain.Notice">
		SELECT 
			   COUNT(NOTICE_ID) OVER() AS TOTAL_COUNT					 			 
			 , INSERT_DATE			 
			 , COMPANY_ID
			 , NOTICE_ID
			 , TITLE		
			 , CONTENT 
			 , IMPORT_010_CD AS IMPORT_CD
			 , ATTACH_ID			 			 
			 , CAD.ORIGNL_FILE_NM AS FILE_NAME 
		FROM RFT_NOTICE RN LEFT JOIN RISK_FREE.CO_ATTACH CA ON RN.ATTACH_ID  = CA.ATCH_FILE_ID
			LEFT JOIN RISK_FREE.CO_ATTACH_DETAIL CAD ON CA.ATCH_FILE_ID  = CAD.ATCH_FILE_ID 	
			WHERE 
			IS_DELETE = 0
			AND COMPANY_ID = #{companyId}
			AND IMPORT_010_CD = '001'		
			ORDER BY NOTICE_ID DESC
		LIMIT 5			
	</select>
	
		
	
	<!-- 공지사항 목록 조회 -->
	<select id="getNoticeList" parameterType="egovframework.com.domain.main.domain.Notice"
			resultType="egovframework.com.domain.main.domain.Notice">
		SELECT 
			   COUNT(NOTICE_ID) OVER() AS TOTAL_COUNT					 			 
			 , TO_CHAR(INSERT_DATE, 'YYYY-MM-DD') AS INSERT_DATE			 
			 , CASE WHEN (INSERT_DATE + '1 DAY') > CURRENT_TIMESTAMP THEN 'Y' ELSE 'N' END NEW_YN			 			 			
			 , COMPANY_ID
			 , NOTICE_ID
			 , TITLE			 
			 , IMPORT_010_CD AS IMPORTCD
		     , LEAD(NOTICE_ID::INT,1,0) OVER(ORDER BY NOTICE_ID DESC) AS PREV_NOTICE
		     , LAG(NOTICE_ID::INT,1,0) OVER(ORDER BY NOTICE_ID DESC) AS NEXT_NOTICE		
		  FROM RFT_NOTICE RN 
		 WHERE 
		   COMPANY_ID = #{companyId}
		   AND IS_DELETE = 0
		<if test="prevNotice != null and prevNotice != '' ">
		   AND NOTICE_ID = #{prevNotice}
		</if>
		<if test="nextNotice != null and nextNotice != '' ">
		   AND NOTICE_ID = #{nextNotice}
		</if>	
		LIMIT 5
	</select>	
			 			
	<!-- 대표이사 개선조치사항 -->
	<select id="getImprovementList" parameterType="egovframework.com.domain.main.domain.Improvement"
			resultType="egovframework.com.domain.main.domain.Improvement">	
		  SELECT 
			  SUM(CASE WHEN PROCESS_009_CD = '002' THEN 1 ELSE 0 END ) AS INSTRUCTION
			 ,SUM(CASE WHEN PROCESS_009_CD = '003' THEN 1 ELSE 0 END ) AS PROGRESS
			 ,SUM(CASE WHEN PROCESS_009_CD = '004' THEN 1 ELSE 0 END ) AS COMPLETE
		  FROM RISK_FREE.RFT_IMPROVE WHERE 1=1
		  AND BASELINE_ID = #{baselineId}
		  <if test="workplaceId == null or workplaceId == '' or workplaceId ==0 ">
		  	AND WORKPLACE_ID = #{workplaceId}
		  </if>	
  		  AND REQ_USER_003_CD = '003'	
	</select>
	
	
	<!-- 안전보건팀장 개선조치사항 -->
	<select id="getLeaderImprovementList" parameterType="egovframework.com.domain.main.domain.Improvement"
			resultType="egovframework.com.domain.main.domain.Improvement">	
		  SELECT 
			  SUM(CASE WHEN PROCESS_009_CD = '002' THEN 1 ELSE 0 END ) AS INSTRUCTION
			 ,SUM(CASE WHEN PROCESS_009_CD = '003' THEN 1 ELSE 0 END ) AS PROGRESS
			 ,SUM(CASE WHEN PROCESS_009_CD = '004' THEN 1 ELSE 0 END ) AS COMPLETE
		  FROM RISK_FREE.RFT_IMPROVE WHERE 1=1
		  AND BASELINE_ID = #{baselineId}
		  <if test="workplaceId == null or workplaceId == '' or workplaceId ==0 ">
		  	AND WORKPLACE_ID = #{workplaceId}
		  </if>	
   		  AND REQ_USER_003_CD != '003'	
	</select>	
	
	
	<!-- 재해발생 방지대책 및 이행현황 -->
	<select id="getAccidentsPrevention" parameterType="egovframework.com.domain.main.domain.Amount"
			resultType="egovframework.com.domain.main.domain.Amount">	
		SELECT CONCAT(COALESCE (TRUNC(TOT.COMPLETE/TOT.TOTAL_CNT * 100),0), '%') AS ENFORCE_RATE FROM (
			SELECT 
			COUNT(COMPANY_ID) AS TOTAL_CNT		
			, SUM(
				CASE 
					WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 1  
					WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 0.5
					ELSE 0
				END
			) AS COMPLETE	
			FROM RFT_INDUSTRIAL_ACCIDENT
			WHERE ((INIT_REPORT_ID != 0 OR FINAL_REPORT_ID != 0) 
			OR (INIT_REPORT_ID = 0 OR FINAL_REPORT_ID != 0)
			OR (INIT_REPORT_ID != 0 OR FINAL_REPORT_ID = 0))
			AND IS_DELETE = 0	
			<if test="workplaceId == null or workplaceId == '' or workplaceId ==0 ">
				AND WORKPLACE_ID = #{workplaceId}
			</if>		
			AND BASELINE_ID = #{baselineId}
		)TOT		  		  		
	</select>	
	
	<!-- 관계법령에 따른 개선 시정명령조치 -->
	<select id="getImprovemetLawOrder" parameterType="egovframework.com.domain.main.domain.Amount"
			resultType="egovframework.com.domain.main.domain.Amount">	
		SELECT CONCAT(COALESCE (TRUNC(TOT.COMPLETE/TOT.TOTAL_CNT * 100),0), '%') AS IMPROVEMET_RATE FROM (
			SELECT			        		     			     
				COUNT(COMPANY_ID) AS TOTAL_CNT		
				, SUM(
					CASE 
						WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 1  
						WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 0.5
						ELSE 0
					END
				) AS COMPLETE	
			  FROM RFT_LAW_IMPROVE  
			WHERE ((PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID != 0) 
			OR (PERFORM_BEFORE_ID = 0 OR PERFORM_AFTER_ID != 0)
			OR (PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID = 0))
			AND IS_DELETE = 0	
			AND IS_ENABLE = 1
			<if test="workplaceId == null or workplaceId == '' or workplaceId ==0 ">
				AND WORKPLACE_ID = #{workplaceId}
			</if>
			AND BASELINE_ID = #{baselineId}
		)TOT	  		  		
	</select>		
	
	<!-- 관계법령에 의무이행의 관리조치 -->
	
	
	
	<!-- 관리차수 day 확인 -->
	<select id="getDayInfo" parameterType="egovframework.com.domain.main.domain.Baseline"
			resultType="egovframework.com.domain.main.domain.Baseline">	
		SELECT DATE_PART('DAY', NOW() - #{baselineStart}::TIMESTAMP) AS DAY
	</select>	
	
	

	<!-- 버전데이터 확인-->
	<select id="selectEssentialDutyVer" resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT DISTINCT TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE  
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_MASTER 
		ORDER BY TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD')  DESC		 
	</select>	
	
	<!-- 현재차수 데이터확인 -->
	<select id="getBaselineCopyConfirm" parameterType="egovframework.com.domain.main.domain.MainExcelData" resultType="int">
		SELECT COUNT(BASELINE_ID) from (
			SELECT 
			     BASELINE_ID 
			     , TO_CHAR(BASELINE_START, 'YYYY-MM-DD') AS BASELINE_START
			     , TO_CHAR(BASELINE_END, 'YYYY-MM-DD') AS BASELINE_END
			  FROM RFT_BASELINE  
			 WHERE IS_DELETE = 0 
			 AND IS_CLOSE = 0
			 AND COMPANY_ID = #{companyId}
			 AND BASELINE_ID = #{baselineId}
			 ORDER BY BASELINE_ID DESC
			 LIMIT 1		
		) TOT 	
	</select>	
	
	<!-- 현재차수에 속하는지 확인 -->
	<select id="getBaselineConfirm" parameterType="egovframework.com.domain.main.domain.MainExcelData" resultType="int">
		SELECT COUNT(BASELINE_ID) from (
			SELECT 
			     BASELINE_ID 
			     , TO_CHAR(BASELINE_START, 'YYYY-MM-DD') AS BASELINE_START
			     , TO_CHAR(BASELINE_END, 'YYYY-MM-DD') AS BASELINE_END
			  FROM RFT_BASELINE  
			 WHERE IS_DELETE = 0 AND IS_CLOSE = 0
			 AND COMPANY_ID = #{companyId}
			 ORDER BY BASELINE_ID DESC
			 LIMIT 1		
		) TOT WHERE NOW() BETWEEN BASELINE_START AND BASELINE_END	
	</select>
	
	<!-- 사업장 의무조치내역 마스터 조회 확인 -->
	<select id="getEssentialDutyMasterCnt" parameterType="egovframework.com.domain.main.domain.MainExcelData"
			resultType="int">
		SELECT 
			COUNT(ARTICLE_NO)		
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_MASTER
		WHERE 1=1
		AND WORKPLACE_ID = #{workplaceId} 
		AND TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD')  = TO_CHAR(NOW(), 'YYYY-MM-DD')
	</select>		
		
	
	
	<!-- 캠토피아 필수 의무조치내역 업로드 -->
	<insert id="insertEssentialDuty" parameterType="java.util.LinkedHashMap">
		INSERT INTO RISK_FREE.RFT_SH_SYSTEM_ARTICLE_MASTER
		(
			GROUP_ID
			, SH_GOALS
			, DETAILED_ITEMS
			, SH_GOAL
			, DUTY_CYCLE
			, DUTY_ASSIGNED
			, RELATED_ARTICLE
			, GUIDELINE
			, UPDATE_DATE
		)VALUES(#{A},#{D}, #{F}, #{L}, #{N}, #{O}, #{C}, #{H}, now())
	</insert>		
	
	<!-- 캠토피아 필수 의무조치내역 -->
	<select id="getEssentialDuty" parameterType="egovframework.com.domain.main.domain.MainExcelData"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			ARTICLE_ID
			, SH_GOALS
			, DETAILED_ITEMS
			, SH_GOAL
			, DUTY_CYCLE
			, DUTY_ASSIGNED
			, RELATED_ARTICLE
			, GUIDELINE
			, UPDATE_DATE
			, GROUP_ID
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_MASTER
		WHERE TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD')  = #{updateDate} 
	</select>	
	
	
	<!-- 복사할필수의무조치내역 중복데이터 확인-->
	<select id="getEducdDataConfirm" parameterType="egovframework.com.domain.main.domain.MainExcelData" resultType="int">
		SELECT 
			COUNT(ARTICLE_NO)				
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE 
		WORKPLACE_ID = #{workplaceId} 
 	    AND BASELINE_ID = #{targetBaselineId}
	</select>	
	
	
	<!-- 사업장 의무조치내역 조회 확인 -->
	<select id="getEssentialDutyUserCopyData" parameterType="egovframework.com.domain.main.domain.MainExcelData"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			ARTICLE_NO
			,SH_GOALS
			,DETAILED_ITEMS
			,SH_GOAL
			,DUTY_CYCLE
			,DUTY_ASSIGNED
			,RELATED_ARTICLE
			,GUIDELINE
			,EVALUATION
			,MANAGER_CHECKED
			,GROUP_ID
			,WORKPLACE_ID
			,BASELINE_ID
			,ARTICLE_CD
			,FILE_ID
			,BASELINE_START
			,BASELINE_END
			,UPDATE_DATE		
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE 
		WORKPLACE_ID = #{workplaceId} 
 	    AND BASELINE_ID = #{baselineId}
	</select>		
	
	

	<!-- 사업장 의무조치내역 조회 확인 -->
	<select id="getEssentialDutyUserCnt" parameterType="egovframework.com.domain.main.domain.MainExcelData"
			resultType="int">
		SELECT 
			COUNT(ARTICLE_NO)		
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE 1=1
		AND WORKPLACE_ID = #{workplaceId} 
 	    AND BASELINE_ID = #{baselineId}
		AND TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD')  = TO_CHAR(NOW(), 'YYYY-MM-DD')
	</select>		
	

	<!-- 사업장 의무조치내역 업로드 -->
	<insert id="insertEssentialDutyUser" parameterType="egovframework.com.domain.main.domain.MainExcelData">
		INSERT INTO RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		(
			ARTICLE_CD
			, WORKPLACE_ID
			, BASELINE_ID
			, GROUP_ID
			, SH_GOALS
			, DETAILED_ITEMS
			, SH_GOAL
			, DUTY_CYCLE
			, DUTY_ASSIGNED
			, RELATED_ARTICLE
			, GUIDELINE
			, BASELINE_START
			, BASELINE_END
			, EVALUATION
		)VALUES(
			#{articleId}
			,#{workplaceId}
			,#{baselineId}
			,#{groupId}
			,#{shGoals}
			,#{detailedItems}
			,#{shGoal}
			,#{dutyCycle}
			,#{dutyAssigned}
			,#{relatedArticle}
			,#{guideline}
			,#{baselineStart}::TIMESTAMP
			,#{baselineEnd}::TIMESTAMP
			,'0'
		)
	</insert>		
	
	<!-- 필수 의무조치 내역 시행율 -->
	<select id="getEssentialRate" parameterType="egovframework.com.domain.main.domain.Amount"
			resultType="egovframework.com.domain.main.domain.Amount">
		SELECT 			
			TOT.GROUP_ID
			, TRUNC((100/(COALESCE(NULLIF(TOT.TOTAL_COUNT, 0), 1)*10)::NUMERIC) * TOT.EVALUATION) AS EVALUATION_RATE 				
		FROM (			
			SELECT 
			TMP.GROUP_ID
			,TMP.SH_GOALS
			,SUM(TMP.EVALUATION::INT) AS EVALUATION 							
			,TOTAL_COUNT
			FROM (			
				SELECT 
					COUNT(ARTICLE_NO) OVER () AS TOTAL_COUNT, GROUP_ID,SH_GOALS , REGEXP_SPLIT_TO_TABLE(EVALUATION ,';')AS  EVALUATION
				FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER	
				WHERE SH_GOALS IS NOT NULL AND SH_GOALS != 'N/A' AND SH_GOALS != ''		
				AND GROUP_ID = #{groupId}
				<if test="workplaceId == null or workplaceId == '' or workplaceId ==0 ">
				   AND WORKPLACE_ID = #{workplaceId}
				</if>				
				AND BASELINE_ID = #{baselineId}				
			)TMP GROUP BY TMP.GROUP_ID,TMP.SH_GOALS, TOTAL_COUNT		
		)TOT 
	</select>		
	
	
	<!-- 관계법령에 의무이행의 관리조치 시행율-->
	<select id="getRelatedRawRate" parameterType="egovframework.com.domain.main.domain.PramAmount"
			resultType="egovframework.com.domain.main.domain.Amount">
		SELECT  
			CONCAT(TRUNC(100/(COALESCE(NULLIF(TOT.TOTAL_COUNT, 0), 1)::NUMERIC) * TOT.COMPLETE), '%') AS RELATED_LAW_RATE
		FROM (		
			SELECT 	
			COUNT(DUTY_IMPROVE_ID ) AS TOTAL_COUNT	
			, SUM(
				CASE 
					WHEN ACCTION_CN != NULL OR ACCTION_CN != '' THEN 1  ELSE 0				
				END
			) AS COMPLETE	
			FROM RFT_DUTY_IMPROVE 
			WHERE 1=1  
			<if test="workplaceId == null or workplaceId == '' or workplaceId ==0 ">
				AND WORKPLACE_ID = #{workplaceId}
			</if>
			AND BASELINE_ID = #{baselineId}		
		)TOT		
	</select>		
		
	
	
	<!-- 의무조치별 상세 점검 항목  -->
	<select id="getDutyDetailList" parameterType="egovframework.com.domain.main.domain.ParamMainExcelData"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			COUNT(ARTICLE_NO) OVER() AS TOTAL_COUNT
			, ARTICLE_NO
			, DETAILED_ITEMS
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE GROUP_ID = #{groupId}
			AND WORKPLACE_ID = #{workplaceId}
		AND BASELINE_ID = #{baselineId}				
	</select>		
	
	
	<!-- 점검서류 등 목록  -->
	<select id="getInspectiondocs" parameterType="egovframework.com.domain.main.domain.ParamDutyCyle"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			COUNT(ARTICLE_NO) OVER() AS TOTAL_COUNT
			,COUNT(FILE_ID) OVER() AS FILE_COUNT
			,ARTICLE_NO			
			,SH_GOAL
			,FILE_ID						
			, EVALUATION
		FROM (
			SELECT 
				ARTICLE_NO
				, REGEXP_SPLIT_TO_TABLE(SH_GOAL ,'\n') AS SH_GOAL				
				, FILE_ID
				, REGEXP_SPLIT_TO_TABLE(EVALUATION ,';') AS EVALUATION
			FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
			WHERE ARTICLE_NO = #{articleNo}	
		)TOT		
	</select>
	
	
	<!-- 이행주기  -->
	<select id="getDutyCyle" parameterType="egovframework.com.domain.main.domain.ParamDutyCyle"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			ARTICLE_NO
			, REGEXP_SPLIT_TO_TABLE(DUTY_CYCLE ,'\n') AS DUTY_CYCLE
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE ARTICLE_NO = #{articleNo}				
	</select>	
	
	<!-- 준수대상  -->
	<select id="getDutyAssigned" parameterType="egovframework.com.domain.main.domain.ParamDutyCyle"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			ARTICLE_NO
			, REGEXP_SPLIT_TO_TABLE(DUTY_ASSIGNED ,'\n') AS DUTY_ASSIGNED
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE ARTICLE_NO = #{articleNo}				
	</select>	
	
	<!-- 관계법령  -->
	<select id="getRelatedArticle" parameterType="egovframework.com.domain.main.domain.ParamDutyCyle"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			ARTICLE_NO
			, REGEXP_SPLIT_TO_TABLE(RELATED_ARTICLE ,'\n') AS RELATED_ARTICLE
			, REGEXP_SPLIT_TO_TABLE(MANAGER_CHECKED ,';') as MANAGER_CHECKED
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE ARTICLE_NO = #{articleNo}				
	</select>	
	
	<!-- 현장작동성 평가 작성 지침서  -->
	<select id="getGuideLine" parameterType="egovframework.com.domain.main.domain.MainExcelData"
			resultType="egovframework.com.domain.main.domain.MainExcelData">
		SELECT 
			ARTICLE_NO
			,GUIDELINE
		FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		WHERE ARTICLE_NO = #{articleNo}					
	</select>	
	
	<!-- 산업재해 누적 집계 -->
	<select id="getAccidentTotal" parameterType="egovframework.com.domain.main.domain.AccidentsAmount"
			resultType="egovframework.com.domain.main.domain.AccidentsAmount">
			
		SELECT 
			SUM(DEATH_TOLL) AS deathTollCnt
				,SUM(SAME_ACCIDENT_INJURY) AS sameAccidentInjuryCnt
				,SUM(JOB_DESEASE_TOLL) AS jobDeseaseTollCnt		
				,SUM(FALLCNT) AS fallCnt
				,SUM(CAUGHTCNT)AS caughtCnt
				,SUM(FIRECNT)AS fireCnt
				,SUM(ELECTCNT)AS electCnt
				,SUM(CONFINEDCNT) AS confinedCnt			
				,SUM(HEAVYCNT) AS heavyCnt	
		FROM (
			SELECT 
				DEATH_TOLL
				,SAME_ACCIDENT_INJURY
				,JOB_DESEASE_TOLL		
				,COUNT(ACC_TYPE_005_FALL) AS FALLCNT
				,COUNT(ACC_TYPE_005_CAUGHT)AS CAUGHTCNT
				,COUNT(ACC_TYPE_005_FIRE)AS FIRECNT
				,COUNT(ACC_TYPE_005_ELECT)AS ELECTCNT
				,COUNT(ACC_TYPE_005_CONFINED)AS CONFINEDCNT 			
				,COUNT(ACC_TYPE_005_HEAVY)AS HEAVYCNT 
			FROM RFT_INDUSTRIAL_ACCIDENT
			WHERE ((INIT_REPORT_ID != 0 OR FINAL_REPORT_ID != 0) 
			OR (INIT_REPORT_ID = 0 OR FINAL_REPORT_ID != 0)
			OR (INIT_REPORT_ID != 0 OR FINAL_REPORT_ID = 0))
			AND IS_DELETE = 0
			<if test="workplaceId == null or workplaceId == '' or workplaceId ==0 ">
				AND WORKPLACE_ID = #{workplaceId}
			</if>		
			AND BASELINE_ID = #{baselineId}					
			GROUP  BY  
				DEATH_TOLL
				,SAME_ACCIDENT_INJURY
				,JOB_DESEASE_TOLL		
				,ACC_TYPE_005_FALL
				,ACC_TYPE_005_CAUGHT
				,ACC_TYPE_005_FIRE
				,ACC_TYPE_005_ELECT
				,ACC_TYPE_005_CONFINED 			
		)TOT				
	</select>
		
	<!-- 안전작업허가 공사내역 -->
	<select id="getSafeWorkHistoryList" parameterType="egovframework.com.domain.main.domain.ParamSafeWork"
			resultType="egovframework.com.domain.main.domain.SafeWork">	
		SELECT 
			TO_CHAR(NOW(), 'MM/DD') AS NOW_DATE
			,CASE WHEN (SELECT EXTRACT(ISODOW FROM CURRENT_DATE)) = 1 THEN '월' 
				WHEN (SELECT EXTRACT(ISODOW FROM CURRENT_DATE)) = 2 THEN '화' 
				WHEN (SELECT EXTRACT(ISODOW FROM CURRENT_DATE)) = 3 THEN '수' 
				WHEN (SELECT EXTRACT(ISODOW FROM CURRENT_DATE)) = 4 THEN '목' 
				WHEN (SELECT EXTRACT(ISODOW FROM CURRENT_DATE)) = 5 THEN '금' 
				WHEN (SELECT EXTRACT(ISODOW FROM CURRENT_DATE)) = 6 THEN '토' 
				WHEN (SELECT EXTRACT(ISODOW FROM CURRENT_DATE)) = 7 THEN '일' 
				END AS NOW_DAY
			,SUM(CASE WHEN CONSTRUCTION_TYPE = '1' THEN 1 ELSE 0 END ) AS FIRE
			,SUM(CASE WHEN CONSTRUCTION_TYPE = '2' THEN 1 ELSE 0 END ) AS CLOSENESS 
			,SUM(CASE WHEN CONSTRUCTION_TYPE = '3' THEN 1 ELSE 0 END ) AS BLACKOUT
			,SUM(CASE WHEN CONSTRUCTION_TYPE = '4' THEN 1 ELSE 0 END ) AS EXCAVATION
			,SUM(CASE WHEN CONSTRUCTION_TYPE = '5' THEN 1 ELSE 0 END ) AS RADIATION
			,SUM(CASE WHEN CONSTRUCTION_TYPE = '6' THEN 1 ELSE 0 END ) AS SUE
		FROM RISK_FREE.RFT_SAFETY_WORK_PERMIT
		WHERE 1=1
		<if test="workplaceId == null or workplaceId == '' or workplaceId ==0 "> 
			AND WORKPLACE_ID = #{workplaceId}
		</if>
		AND INSERT_DATE BETWEEN #{baselineStart}::timestamp AND #{baselineEnd}::timestamp 
	</select>		
		
	
	
	<!-- 점검서류등목록 점수생성 -->
	<update id="updateScore" parameterType="egovframework.com.domain.main.domain.ParamDutyCyle">
		UPDATE RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		SET EVALUATION = #{evaluation}
		WHERE ARTICLE_NO = #{articleNo}	
	</update>	
	
	<!-- 점검서류등목록 파일생성 -->
	<update id="updateDocumentFileId" parameterType="egovframework.com.domain.main.domain.ParamDutyCyle">
		UPDATE RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		SET FILE_ID = #{fileId}
		WHERE ARTICLE_NO = #{articleNo}
	</update>	
	
	<!-- 관계법령 체크 -->
	<update id="updateRelatedArticle" parameterType="egovframework.com.domain.main.domain.ParamDutyCyle">
		UPDATE RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		SET MANAGER_CHECKED = #{managerChecked}
		WHERE ARTICLE_NO = #{articleNo}
	</update>		
	
	
	<!-- 안전작업공사허가서 업로드 -->
	<insert id="insertSafeWorkExcelUpload" parameterType="java.util.LinkedHashMap">
		INSERT INTO RISK_FREE.RFT_SAFETY_WORK_PERMIT(
			COMPANY_ID
			, WORKPLACE_ID
			, INSERT_DATE
			, USER_ID
			, CONSTRUCTION_TYPE
			, ATTACH_ID
		)VALUES(
		#{companyId}::int
		,#{workplaceId}::int
		, now()
		, #{userId}::int
		, #{B}
		, #{attachId}::int)
	</insert>		
	
	
	
	<!-- 레포트 -->
	<!-- 레포트 아이템 항목-->
	<select id="getTitleReport" parameterType="egovframework.com.domain.main.domain.Report"
			resultType="egovframework.com.domain.main.domain.Report">
		SELECT 
			L.WORKPLACE_ID
			, (SELECT WORKPLACE_NAME FROM RISK_FREE.RFT_WORKPLACE RW WHERE L.WORKPLACE_ID = RW.WORKPLACE_ID) AS WORKPLACE_NAME 
		FROM (
				SELECT 			
					TOT.WORKPLACE_ID 
					,TOT.GROUP_ID
				FROM (	
				SELECT 
					TMP.WORKPLACE_ID 
					,TMP.GROUP_ID
					,TMP.SH_GOALS
					,TOTAL_COUNT
					FROM (			
						SELECT 
							WORKPLACE_ID , COUNT(ARTICLE_NO) OVER () AS TOTAL_COUNT, GROUP_ID,SH_GOALS 							
						FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER	
						WHERE SH_GOALS IS NOT NULL AND SH_GOALS != 'N/A' AND SH_GOALS != ''
						<choose>
							<when test="condition == '1'">
								AND BASELINE_ID = #{baselineId}
							</when>
							<when test="condition == '2'">
								AND WORKPLACE_ID = #{workplaceId}
								AND BASELINE_ID = #{baselineId}
							</when>			
						</choose>							
					)TMP GROUP BY TMP.WORKPLACE_ID, TMP.GROUP_ID ,TMP.SH_GOALS, TOTAL_COUNT 
				)TOT  					
				UNION ALL 			
				SELECT WORKPLACE_ID
				, 12
				FROM (
					SELECT 
					WORKPLACE_ID 
					,COUNT(COMPANY_ID) AS TOTAL_CNT		
					, SUM(
						CASE 
							WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 1  
							WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 0.5
							ELSE 0
						END
					) AS COMPLETE	
					FROM RISK_FREE.RFT_INDUSTRIAL_ACCIDENT
					WHERE ((INIT_REPORT_ID != 0 OR FINAL_REPORT_ID != 0) 
					OR (INIT_REPORT_ID = 0 OR FINAL_REPORT_ID != 0)
					OR (INIT_REPORT_ID != 0 OR FINAL_REPORT_ID = 0))
					AND IS_DELETE = 0
					<choose>
						<when test="condition == '1'">
							AND BASELINE_ID = #{baselineId}
						</when>
						<when test="condition == '2'">
							AND WORKPLACE_ID = #{workplaceId}
							AND BASELINE_ID = #{baselineId}
						</when>			
					</choose>						
					GROUP BY WORKPLACE_ID 
				)TOT 
				UNION ALL
				SELECT WORKPLACE_ID
				,13				
				FROM (
					SELECT			        		     			     
						WORKPLACE_ID
						, COUNT(COMPANY_ID) AS TOTAL_CNT		
						, SUM(
							CASE 
								WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 1  
								WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 0.5
								ELSE 0
							END
						) AS COMPLETE	
					  FROM RISK_FREE.RFT_LAW_IMPROVE  
					WHERE ((PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID != 0) 
					OR (PERFORM_BEFORE_ID = 0 OR PERFORM_AFTER_ID != 0)
					OR (PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID = 0))
					AND IS_DELETE = 0	
					AND IS_ENABLE = 1
					<choose>
						<when test="condition == '1'">
							AND BASELINE_ID = #{baselineId}
						</when>
						<when test="condition == '2'">
							AND WORKPLACE_ID = #{workplaceId}
							AND BASELINE_ID = #{baselineId}
						</when>			
					</choose>						
					GROUP BY WORKPLACE_ID
				)TOT		
				UNION ALL
				SELECT  
					WORKPLACE_ID
					,14
				FROM (		
					SELECT 	
					WORKPLACE_ID
					, COUNT(DUTY_IMPROVE_ID ) AS TOTAL_COUNT	
					, SUM(
						CASE 
							WHEN ACCTION_CN != NULL OR ACCTION_CN != '' THEN 1  ELSE 0				
						END
					) AS COMPLETE	
					FROM RISK_FREE.RFT_DUTY_IMPROVE
					<choose>
						<when test="condition == '1'">
							WHERE BASELINE_ID = #{baselineId}
						</when>
						<when test="condition == '2'">
							WHERE WORKPLACE_ID = #{workplaceId}
							AND BASELINE_ID = #{baselineId}
						</when>			
					</choose>						
					GROUP BY WORKPLACE_ID
				)TOT		
		)L GROUP BY WORKPLACE_ID , WORKPLACE_NAME 
		ORDER BY WORKPLACE_ID 			
			
	</select>		
	
	
	<!-- 레포트 정보 -->
	<select id="getBaseLineReport" parameterType="egovframework.com.domain.main.domain.Report"
			resultType="egovframework.com.domain.main.domain.Report">
		SELECT 
			L.WORKPLACE_ID 
			,L.GROUP_ID
			, L.EVALUATION_RATE 				
			, L.MENU_TITLE
			, (SELECT WORKPLACE_NAME FROM RISK_FREE.RFT_WORKPLACE RW WHERE L.WORKPLACE_ID = RW.WORKPLACE_ID) AS WORKPLACE_NAME 
		FROM (
				SELECT 			
					TOT.WORKPLACE_ID 
					,TOT.GROUP_ID
					, TRUNC((100/((COALESCE(NULLIF(TOT.TOTAL_COUNT, 0), 1)*10)::NUMERIC) * TOT.EVALUATION) AS EVALUATION_RATE
					, GET_COMM_NM('013', GROUP_ID::CHAR) AS MENU_TITLE 				
				FROM (	
				SELECT 
					TMP.WORKPLACE_ID 
					,TMP.GROUP_ID
					,TMP.SH_GOALS
					,SUM(TMP.EVALUATION::INT) AS EVALUATION 							
					,TOTAL_COUNT
					FROM (			
						SELECT 
							WORKPLACE_ID , COUNT(ARTICLE_NO) OVER () AS TOTAL_COUNT, GROUP_ID,SH_GOALS , REGEXP_SPLIT_TO_TABLE(EVALUATION ,';')AS  EVALUATION
						FROM RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER	
						WHERE SH_GOALS IS NOT NULL AND SH_GOALS != 'N/A' AND SH_GOALS != ''
																
						<choose>
							<when test="condition == '1'">
								AND BASELINE_ID = #{baselineId}
							</when>
							<when test="condition == '2'">
								AND WORKPLACE_ID = #{workplaceId}
								AND BASELINE_ID = #{baselineId}
							</when>			
						</choose>													
					)TMP GROUP BY TMP.WORKPLACE_ID, TMP.GROUP_ID ,TMP.SH_GOALS, TOTAL_COUNT 
				)TOT  					
				union all 			
				SELECT WORKPLACE_ID
				, 10
				, COALESCE (TRUNC(TOT.COMPLETE/TOT.TOTAL_CNT * 100),0) AS ENFORCE_RATE
				, GET_COMM_NM('013', '10') AS MENU_TITLE 
				FROM (
					SELECT 
					WORKPLACE_ID 
					,COUNT(COMPANY_ID) AS TOTAL_CNT		
					, SUM(
						CASE 
							WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 1  
							WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 0.5
							ELSE 0
						END
					) AS COMPLETE	
					FROM RISK_FREE.RFT_INDUSTRIAL_ACCIDENT
					WHERE ((INIT_REPORT_ID != 0 OR FINAL_REPORT_ID != 0) 
					OR (INIT_REPORT_ID = 0 OR FINAL_REPORT_ID != 0)
					OR (INIT_REPORT_ID != 0 OR FINAL_REPORT_ID = 0))
					AND IS_DELETE = 0
					<choose>
						<when test="condition == '1'">
							AND BASELINE_ID = #{baselineId}
						</when>
						<when test="condition == '2'">
							AND WORKPLACE_ID = #{workplaceId}
							AND BASELINE_ID = #{baselineId}
						</when>			
					</choose>											
					group by WORKPLACE_ID 
				)TOT 
				union all
				SELECT WORKPLACE_ID
				,11
				,COALESCE (TRUNC(TOT.COMPLETE/TOT.TOTAL_CNT * 100),0) AS IMPROVEMET_RATE
				, GET_COMM_NM('013', '11') AS MENU_TITLE 
				FROM (
					SELECT			        		     			     
						WORKPLACE_ID
						, COUNT(COMPANY_ID) AS TOTAL_CNT		
						, SUM(
							CASE 
								WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 1  
								WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 0.5
								ELSE 0
							END
						) AS COMPLETE	
					  FROM RISK_FREE.RFT_LAW_IMPROVE  
					WHERE ((PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID != 0) 
					OR (PERFORM_BEFORE_ID = 0 OR PERFORM_AFTER_ID != 0)
					OR (PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID = 0))
					AND IS_DELETE = 0	
					AND IS_ENABLE = 1
					<choose>
						<when test="condition == '1'">
							AND BASELINE_ID = #{baselineId}
						</when>
						<when test="condition == '2'">
							AND WORKPLACE_ID = #{workplaceId}
							AND BASELINE_ID = #{baselineId}
						</when>			
					</choose>											
					GROUP BY WORKPLACE_ID
				)TOT		
				union all
				SELECT  
					WORKPLACE_ID
					, 12
					, TRUNC((100/(COALESCE(NULLIF(TOT.TOTAL_COUNT, 0), 1)::NUMERIC) * TOT.COMPLETE) AS RELATED_LAW_RATE
					, GET_COMM_NM('013', '12') AS MENU_TITLE
				FROM (		
					SELECT 	
					WORKPLACE_ID
					, COUNT(DUTY_IMPROVE_ID ) AS TOTAL_COUNT	
					, SUM(
						CASE 
							WHEN ACCTION_CN != NULL OR ACCTION_CN != '' THEN 1  ELSE 0				
						END
					) AS COMPLETE	
					FROM RISK_FREE.RFT_DUTY_IMPROVE
					<choose>
						<when test="condition == '1'">
							WHERE BASELINE_ID = #{baselineId}
						</when>
						<when test="condition == '2'">
							WHERE WORKPLACE_ID = #{workplaceId}
							AND BASELINE_ID = #{baselineId}
						</when>			
					</choose>		
					group by WORKPLACE_ID
				)TOT		
		)L 
		<choose>
			<when test="condition == '3'">
				WHERE L.GROUP_ID = #{groupId}
			</when>
			<when test="condition == '4'">
				WHERE L.GROUP_ID = #{groupId}
				AND L.WORKPLACE_ID = #{workplaceId}
			</when>			
		</choose>		
		ORDER BY GROUP_ID,WORKPLACE_ID			
	</select>	
	
	
	
	
	
	
	
	
	
	<!-- 레포트 재해발생 방지대책 및 이행현황 -->
	<select id="getAccidentsPreventionReport" parameterType="egovframework.com.domain.main.domain.Amount"
			resultType="egovframework.com.domain.main.domain.Amount">	
		SELECT TOT.WORKPLACE_NAME
			, TOT.WORKPLACE_ID
			, COALESCE (TRUNC(TOT.COMPLETE/TOT.TOTAL_CNT * 100),0) AS ENFORCE_RATE 
			,TOT.COMPLETE
			,TOT.TOTAL_CNT
		FROM (		
			SELECT 
			COUNT(RIA.WORKPLACE_ID) AS TOTAL_CNT		
			,RIA.WORKPLACE_ID	
			,RW.WORKPLACE_NAME
			, SUM(
				CASE 
					WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 1  
					WHEN INIT_REPORT_ID != 0 AND FINAL_REPORT_ID !=0 AND FINAL_REPORT_ID != 0 THEN 0.5
					ELSE 0
				END
			) AS COMPLETE	
			FROM RISK_FREE.RFT_INDUSTRIAL_ACCIDENT RIA JOIN RISK_FREE.RFT_WORKPLACE RW ON RW.WORKPLACE_ID = RIA.WORKPLACE_ID
			WHERE ((INIT_REPORT_ID != 0 OR FINAL_REPORT_ID != 0) 
			OR (INIT_REPORT_ID = 0 OR FINAL_REPORT_ID != 0)
			OR (INIT_REPORT_ID != 0 OR FINAL_REPORT_ID = 0))
			AND RIA.IS_DELETE = 0
			AND RIA.COMPANY_ID = #{companyId}
			AND OCCUR_DATE BETWEEN #{baselineStart}::timestamp AND #{baselineEnd}::timestamp
			GROUP BY RIA.WORKPLACE_ID, RW.WORKPLACE_NAME			
		)TOT			
	</select>	
	
	<!-- 레포트  관계법령에 따른 개선 시정명령조치 -->
	<select id="getImprovemetLawOrderReport" parameterType="egovframework.com.domain.main.domain.Amount"
			resultType="egovframework.com.domain.main.domain.Amount">	
		SELECT 
			TOT.WORKPLACE_NAME
			,TOT.WORKPLACE_ID
			,CONCAT(COALESCE (TRUNC(TOT.COMPLETE/TOT.TOTAL_CNT * 100),0), '%') AS IMPROVEMET_RATE 
			,TOT.COMPLETE
			,TOT.TOTAL_CNT
		FROM (
			SELECT			        		     			     
				COUNT(RLI.WORKPLACE_ID) AS TOTAL_CNT		
				,RLI.WORKPLACE_ID	
				,RW.WORKPLACE_NAME
				, SUM(
					CASE 
						WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 1  
						WHEN PERFORM_BEFORE_ID != 0 AND PERFORM_AFTER_ID !=0 AND PERFORM_AFTER_ID != 0 THEN 0.5
						ELSE 0
					END
				) AS COMPLETE	
			  FROM RISK_FREE.RFT_LAW_IMPROVE RLI JOIN RISK_FREE.RFT_WORKPLACE RW ON RLI.WORKPLACE_ID = RW.WORKPLACE_ID 
			WHERE ((PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID != 0) 
			OR (PERFORM_BEFORE_ID = 0 OR PERFORM_AFTER_ID != 0)
			OR (PERFORM_BEFORE_ID != 0 OR PERFORM_AFTER_ID = 0))
			AND RLI.IS_DELETE = 0	
			AND RLI.IS_ENABLE = 1
			AND RLI.COMPANY_ID = #{companyId}
			AND OCCUR_DATE BETWEEN #{baselineStart}::timestamp AND #{baselineEnd}::timestamp		
			GROUP BY RLI.WORKPLACE_ID, RW.WORKPLACE_NAME			
		)TOT		  		  		
	</select>
	
	
	<!-- 사용자 정보 설정 등록-->
	<update id="updateUserCompany" parameterType="egovframework.com.domain.main.domain.Setting">
		UPDATE RISK_FREE.RFT_COMPANY
		   SET
			 LOGO_ID = #{attachFileId}
			 , SAFETY_GOAL = #{safetyGoal}
			 , MISSION_STATEMENTS = #{missionStatements}
			 , UPDATE_ID = #{updateId}
			 , UPDATE_DATE = now()			 
		 WHERE COMPANY_ID = #{companyId}   
	</update>	
	
		
	<!-- 안전작업허가서 양식 유무 확인-->
	<select id="getSafetyFileCnt" parameterType="egovframework.com.domain.main.domain.Setting"
			resultType="int">		
		SELECT 
			COUNT(SAFETY_PERMIT_FILE_ID) 
		FROM RISK_FREE.RFT_WORKPLACE 
		WHERE WORKPLACE_ID = #{workplaceId}
	</select>	
	
	<!-- 안전작업허가서 양식 업로드-->
	<update id="updateSafetyFile" parameterType="egovframework.com.domain.main.domain.Setting">	
		UPDATE RISK_FREE.RFT_WORKPLACE
		SET  SAFETY_PERMIT_FILE_ID = #{attachFileId}
			,LAST_UPDATE_ID = #{updateId}
			,LAST_UPDATE_DATE = now()
		WHERE WORKPLACE_ID = #{workplaceId}
	</update>
	
	<!-- 관리차수등록-->
	<insert id="insertBaseline" parameterType="egovframework.com.domain.main.domain.Setting">
		INSERT INTO RISK_FREE.RFT_BASELINE
		(
			COMPANY_ID
		  , BASELINE_NAME
		  , BASELINE_START
		  , BASELINE_END
		  , IS_CLOSE
		  , IS_ENABLE
		  , IS_DELETE
		  , INSERT_ID
		  , INSERT_DATE
		  , UPDATE_ID
		  , UPDATE_DATE
		)
		VALUES
		(
			#{companyId}
		  , #{baselineName}
		  , #{baselineStart}::timestamp
		  , #{baselineEnd}::timestamp
		  , 0
		  , 1
		  , 0
		  , #{insertId}
		  , now()
		  , #{updateId}
		  , now()
		)
	</insert>	
	
	
	<!-- 관리차수 복사 -->
	<insert id="insertBaseLineDataCopy" parameterType="egovframework.com.domain.main.domain.MainExcelData">
		INSERT INTO RISK_FREE.RFT_SH_SYSTEM_ARTICLE_USER
		(
			ARTICLE_CD
			, WORKPLACE_ID
			, BASELINE_ID
			, GROUP_ID
			, SH_GOALS
			, DETAILED_ITEMS
			, SH_GOAL
			, DUTY_CYCLE
			, DUTY_ASSIGNED
			, RELATED_ARTICLE
			, GUIDELINE
			, BASELINE_START
			, BASELINE_END
			, EVALUATION
		)VALUES(
			#{articleId}
			,#{workplaceId}
			,#{baselineId}
			,#{groupId}
			,#{shGoals}
			,#{detailedItems}
			,#{shGoal}
			,#{dutyCycle}
			,#{dutyAssigned}
			,#{relatedArticle}
			,#{guideline}
			,#{baselineStart}::TIMESTAMP
			,#{baselineEnd}::TIMESTAMP
			,'0'
		)
	</insert>		


	<update id="closeBaseline" parameterType="HashMap">
		update RFT_BASELINE
		   set IS_CLOSE = 1
		   	 , UPDATE_ID = #{updateId}::int
		     , UPDATE_DATE = now()
		 where COMPANY_ID = #{companyId}::int
		   AND BASELINE_ID = #{baselineId}::int    
	</update>
		
</mapper>
