<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.domain.improvement.dao.ImprovementDAO">

	<select id="getImprovementList" parameterType="egovframework.com.domain.improvement.parameter.ImprovementSearchParameter" 
			resultType="egovframework.com.domain.improvement.domain.Improvement">
		SELECT 
			   COUNT(IMPROVE_ID) OVER() AS TOTAL_COUNT
			 , IMPROVE_ID
			 , GET_WORKPLACE_NM(WORKPLACE_ID) AS WORKPLACE_NAME 
			 , TO_CHAR(REQ_DATE, 'YYYY-MM-DD') AS REQ_DATE
			 , get_comm_nm('003', req_user_003_cd) as REQ_USER_NAME
			 , IMPROVE_CN 
			 , IMPROVE_NO
			 , TO_CHAR(FIN_DATE, 'yyyy-mm-dd') AS FIN_DATE
			 , GET_COMM_NM('009', PROCESS_009_CD) AS STATUS
		  FROM RFT_IMPROVE 
		 WHERE COMPANY_ID = #{companyId}
		   AND BASELINE_ID = #{baselineId}
		 <if test="workplaceId != null">
		   AND WORKPLACE_ID = #{workplaceId} 	
		 </if>
		 <if test="startDate != null and startDate != '' ">
		   AND REQ_DATE  <![CDATA[ >= ]]> #{startDate}::timestamp	
		 </if>
		  <if test="endDate != null and endDate != '' ">
		   AND REQ_DATE <![CDATA[ < ]]> #{endDate}::timestamp + interval '1 day' 	
		 </if>
		  <if test="reqUserCd != null and reqUserCd != '' ">
		   AND REQ_USER_003_CD = #{reqUserCd} 	
		 </if>
		 <if test="statusCd != null and statusCd != '' ">
		   AND PROCESS_009_CD = #{statusCd} 	
		 </if>
		 ORDER BY IMPROVE_ID DESC
		 <include refid="egovframework.com.domain.common.commonSql.page-1" />
	</select>
	
	<insert id="insertImprovement" parameterType="egovframework.com.domain.improvement.parameter.ImprovementParameter">
		INSERT INTO rft_improve
		(
		  	COMPANY_ID
		  , WORKPLACE_ID
		  , IMPROVE_NO
		  , IMPROVE_CN
		  , REQ_DATE
		  , REQ_USER_003_CD
		  , FIN_DATE
		  , REQ_FILE_ID
		  , PROCESS_009_CD
		  , ACTION_CN
		  , ACTION_BEFORE_ID
		  , ACTION_AFTER_ID
		  , IS_ENABLE
		  , IS_DELETE
		  , INSERT_ID
		  , INSERT_DATE
		  , UPDATE_ID
		  , UPDATE_DATE
		  , BASELINE_ID 
		)
		VALUES
		(
			#{companyId}
		  , #{workplaceId}
		  , #{improveNo}
		  , #{improveCn}
		  , #{reqDate}::timestamp
		  , #{reqUserCd}
		  , #{finDate}::timestamp
		  , #{reqFileId}
		  , #{statusCd}
		  , #{actionCn}
		  , #{actionBeforeId}
		  , #{actionAfterId}
		  , 1
		  , 0
		  , #{insertId}
		  , now()
		  , #{updateId}
		  , now()
		  , #{baselineId}
		)
	</insert>
	
	<select id="getImprovement" parameterType="HashMap" resultType="egovframework.com.domain.improvement.domain.Improvement">
		SELECT
			   GET_WORKPLACE_NM(WORKPLACE_ID) AS WORKPLACE_NAME
			 , WORKPLACE_ID
			 , IMPROVE_ID
			 , IMPROVE_NO 
			 , IMPROVE_CN
			 , TO_CHAR(REQ_DATE, 'YYYY-MM-DD') AS REQ_DATE
			 , GET_COMM_NM('003', req_user_003_cd) AS REQ_USER_NAME
			 , REQ_USER_003_CD AS REQ_USER_CD
			 , TO_CHAR(FIN_DATE, 'YYYY-MM-DD') AS FIN_DATE 
			 , REQ_FILE_ID
			 , PROCESS_009_CD AS STATUS_CD
			 , ACTION_CN
			 , ACTION_BEFORE_ID
			 , ACTION_AFTER_ID
		  FROM RFT_IMPROVE 
		 WHERE COMPANY_ID = #{companyId}
		   AND IMPROVE_ID = #{improveId}
	</select>
	
	<update id="modifyImprovement" parameterType="egovframework.com.domain.improvement.parameter.ImprovementParameter">
		UPDATE RFT_IMPROVE 
		   SET WORKPLACE_ID = #{workplaceId}, 
		   	   IMPROVE_NO = #{improveNo},
		   	   IMPROVE_CN = #{improveCn},
		   	   REQ_DATE = #{reqDate}::timestamp,
		   	   REQ_USER_003_CD = #{reqUserCd},
		   	   FIN_DATE = #{finDate}::timestamp,
		   	   REQ_FILE_ID = #{reqFileId},
		   	   PROCESS_009_CD = #{statusCd},
		   	   ACTION_CN = #{actionCn},
		   	   ACTION_BEFORE_ID = #{actionBeforeId},
		   	   ACTION_AFTER_ID = #{actionAfterId},
		   	   UPDATE_ID = #{updateId},
		   	   UPDATE_DATE = now()
		 WHERE COMPANY_ID = #{companyId}
		   AND IMPROVE_ID = #{improveId}
		   AND BASELINE_ID = #{baselineId}
	</update>
	
	<delete id="deleteImprovement" parameterType="HashMap">
		DELETE FROM RFT_IMPROVE
		 WHERE COMPANY_ID = #{companyId}
		   AND IMPROVE_ID = #{improveId}
	</delete>
	
</mapper>