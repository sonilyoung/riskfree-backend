<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.domain.subscriber.dao.SubscriberDAO">

	<select id="getSubscriberCompanyList" parameterType="subscriberSearchParameter" resultType="subscriber">
		<choose>
			<when test="col eq 'all' and param eq ''">
				SELECT * FROM (
					SELECT 
						   SUM(CASE WHEN RU.ROLE_003_CD ='001' THEN 1 ELSE 0 END ) OVER() AS TOTAL_COUNT
					     , ROW_NUMBER() OVER(PARTITION BY RC.COMPANY_ID ORDER BY RU.ROLE_003_CD ASC, RW.WORKPLACE_ID ASC) AS ROW_NUM
						 , COUNT(RC.COMPANY_ID) OVER (PARTITION BY RC.COMPANY_ID) AS ROW_COUNT
						 , RC.COMPANY_ID
						 , RC.COMPANY_NAME
						 , RW.REGIST_NO 
						 , RW.WORKPLACE_ID
						 , RW.WORKPLACE_NAME
						 , SECTOR_002_CD
						 , GET_COMM_NM('001',RW.SCALE_001_CD) AS SCALE
						 , GET_COMM_NM('002',RW.SECTOR_002_CD) AS SECTOR
						 , RU.USER_ID 
						 , RU.LOGIN_ID
						 , GET_COMM_NM('003',RU.ROLE_003_CD) AS MANAGER_ROLE
						 , RU.USER_NAME AS MANAGER_NAME
						 , RU.TEL AS MANAGER_TEL
						 , RW.CONTRACT_AMOUNT
						 , CONCAT(TO_CHAR(RW.CONTRACT_START_DATE, 'YYYY-MM-DD'), '~', TO_CHAR(RW.CONTRACT_END_DATE, 'YYYY-MM-DD')) AS CONTRACT_DATE
						 , (CASE WHEN RW.IS_ENABLE = 1 THEN '사용' ELSE '사용중지' END) AS STATUS
						 , RW.CONTRACT_FILE_ID
						 , CASE WHEN COALESCE(RW.CONTRACT_FILE_ID, 0) = 0 THEN 'X' ELSE 'O' END AS  CONTRACT_FILE_YN
						 , TO_CHAR(RW.CONTRACT_DAY, 'YYYY-MM-DD')AS CONTRACT_DAY
						 , CASE WHEN (RC.INSERT_DATE + '1 DAY') > CURRENT_TIMESTAMP THEN 'Y' ELSE 'N' END NEW_YN
					  FROM RFT_COMPANY RC
					  JOIN RFT_WORKPLACE RW ON RC.COMPANY_ID = RW.COMPANY_ID 
					  JOIN RFT_USER RU 	ON RC.COMPANY_ID = RU.COMPANY_ID 
					   AND RW.WORKPLACE_ID = RU.WORKPLACE_ID 		   
					  ORDER BY RW.CONTRACT_DAY DESC, RC.COMPANY_ID ASC, RU.ROLE_003_CD ASC, RW.WORKPLACE_ID ASC
				) TOT WHERE ROW_NUM =1 
			</when>
			<otherwise>
				SELECT 
					   COUNT(RC.COMPANY_ID) OVER() AS TOTAL_COUNT
				     , ROW_NUMBER() OVER(PARTITION BY RC.COMPANY_ID ORDER BY RW.WORKPLACE_ID ASC , RU.ROLE_003_CD ASC ) AS ROW_NUM
					 , COUNT(RC.COMPANY_ID) OVER (PARTITION BY RC.COMPANY_ID) AS ROW_COUNT
					 , RC.COMPANY_ID
					 , RC.COMPANY_NAME
					 , RW.REGIST_NO 
					 , RW.WORKPLACE_ID
					 , RW.WORKPLACE_NAME
					 , GET_COMM_NM('001',RW.SCALE_001_CD) AS SCALE
					 , GET_COMM_NM('002',RW.SECTOR_002_CD) AS SECTOR
					 , RU.USER_ID 
					 , RU.LOGIN_ID
					 , GET_COMM_NM('003',RU.ROLE_003_CD) AS MANAGER_ROLE
					 , RU.USER_NAME AS MANAGER_NAME
					 , RU.TEL AS MANAGER_TEL
					 , RW.CONTRACT_AMOUNT
					 , CONCAT(TO_CHAR(RW.CONTRACT_START_DATE, 'YYYY-MM-DD'), '~', TO_CHAR(RW.CONTRACT_END_DATE, 'YYYY-MM-DD')) AS CONTRACT_DATE
					 , (CASE WHEN RW.IS_ENABLE = 1 THEN '사용' ELSE '사용중지' END) AS STATUS
					 , RW.CONTRACT_FILE_ID
					 , CASE WHEN COALESCE(RW.CONTRACT_FILE_ID, 0) = 0 THEN 'X' ELSE 'O' END AS  CONTRACT_FILE_YN
					 , TO_CHAR(RW.CONTRACT_DAY, 'YYYY-MM-DD')AS CONTRACT_DAY
					 , CASE WHEN (RC.INSERT_DATE + '1 DAY') > CURRENT_TIMESTAMP THEN 'Y' ELSE 'N' END NEW_YN
				  FROM RFT_COMPANY RC
				  JOIN RFT_WORKPLACE RW ON RC.COMPANY_ID = RW.COMPANY_ID 
				  JOIN RFT_USER RU 	ON RC.COMPANY_ID = RU.COMPANY_ID 
				   AND RW.WORKPLACE_ID = RU.WORKPLACE_ID 
				 WHERE 1 = 1
				 <if test="col eq 'all'.toString()">
				  AND LOWER(RC.COMPANY_NAME) LIKE LOWER('%${param}%')
				  OR RU.USER_NAME LIKE '%${param}%'
				  OR RU.LOGIN_ID  LIKE '%${param}%'
				 </if>
				 <if test="col eq 'companyName'.toString()">
				   AND LOWER(RC.COMPANY_NAME) LIKE LOWER('%${param}%')
				 </if>
				 <if test="col eq 'userName'.toString()">
				   AND RU.USER_NAME LIKE '%${param}%'
				 </if>
				 <if test="col eq 'loginId'.toString()">
				   AND RU.LOGIN_ID  LIKE '%${param}%'
				 </if>
				  ORDER BY RW.CONTRACT_DAY DESC,RC.COMPANY_ID ASC, RU.ROLE_003_CD ASC, RW.WORKPLACE_ID ASC
			</otherwise>			
		</choose>	
	</select>
	
	<select id="getSubscriberWorkplaceList" parameterType="Long" resultType="subscriber">
		SELECT 
			 RC.COMPANY_ID
			 , RC.COMPANY_NAME
			 , RW.REGIST_NO 
			 , RW.WORKPLACE_ID
			 , RW.WORKPLACE_NAME
			 , GET_COMM_NM('001',RW.SCALE_001_CD) AS SCALE
			 , GET_COMM_NM('002',RW.SECTOR_002_CD) AS SECTOR
			 , RU.USER_ID 
			 , RU.LOGIN_ID
			 , GET_COMM_NM('003',RU.ROLE_003_CD) AS MANAGER_ROLE
			 , RU.USER_NAME AS MANAGER_NAME
			 , RU.TEL AS MANAGER_TEL
			 , RW.CONTRACT_AMOUNT
			 , CONCAT(TO_CHAR(RW.CONTRACT_START_DATE, 'YYYY-MM-DD'), '~', TO_CHAR(RW.CONTRACT_END_DATE, 'YYYY-MM-DD')) AS CONTRACT_DATE
			 , (CASE WHEN RW.IS_ENABLE = 1 THEN '사용' ELSE '사용중지' END) AS STATUS
			 , RW.CONTRACT_FILE_ID
			 , CASE WHEN COALESCE(RW.CONTRACT_FILE_ID, 0) = 0 THEN 'X' ELSE 'O' END AS  CONTRACT_FILE_YN
			 , TO_CHAR(RW.CONTRACT_DAY, 'YYYY-MM-DD')AS CONTRACT_DAY
			 , CASE WHEN (RC.INSERT_DATE + '1 DAY') > CURRENT_TIMESTAMP THEN 'Y' ELSE 'N' END NEW_YN
		  FROM RFT_COMPANY RC 
		  JOIN RFT_WORKPLACE RW ON RC.COMPANY_ID = RW.COMPANY_ID 
		  JOIN RFT_USER RU ON RW.WORKPLACE_ID = RU.WORKPLACE_ID 
		 WHERE RC.COMPANY_ID = #{companyId}
		 AND ROLE_003_CD != '001'
		 ORDER BY RW.WORKPLACE_ID 
	</select>
	
	<!-- 대표이사 유무 확인 -->
	<select id="getCompanyCeoInfo" parameterType="subscriberParameter" resultType="int">
		SELECT 
			 COUNT(RC.CEO_ID)	 
		  FROM RFT_COMPANY RC 
		  JOIN RFT_WORKPLACE RW ON RC.COMPANY_ID = RW.COMPANY_ID
		  JOIN RFT_USER RU ON RW.WORKPLACE_ID = RU.WORKPLACE_ID 
		 WHERE  
		  	RC.COMPANY_NAME = #{companyName}
		  	AND RW.WORKPLACE_NAME = #{workplaceName}
		  	AND ROLE_003_CD = '001'
	</select>		
	
	<!-- 회사정보 유무 확인 -->
	<select id="getCompanyInfo" parameterType="subscriberParameter" resultType="subscriber">
		SELECT 
			   RC.COMPANY_ID
			 , RC.COMPANY_NAME
			 , RW.WORKPLACE_ID
			 , RW.WORKPLACE_NAME	
			 , TO_CHAR(RW.CONTRACT_DAY, 'YYYY-MM-DD')AS CONTRACT_DAY		 
		  FROM RFT_COMPANY RC 
		  JOIN RFT_WORKPLACE RW ON RC.COMPANY_ID = RW.COMPANY_ID 
		 WHERE  
		  <if test='condition == "1"'>
		  	RC.COMPANY_NAME = #{companyName}
		  	LIMIT 1
		  </if>
		  <if test='condition == "2"'>
		  	RC.COMPANY_NAME = #{companyName}
		  	AND RW.WORKPLACE_NAME = #{workplaceName}
		 	LIMIT 1
		  </if>		  
	</select>	
	
	
	<insert id="insertCompany" parameterType="subscriberParameter">
		INSERT INTO RFT_COMPANY
		(
			COMPANY_NAME
		  , CEO_ID
		  , INSERT_ID
		  , INSERT_DATE
		  , LAST_UPDATE_ID
		  , LAST_UPDATE_DATE
		 )
		VALUES
		(
			#{companyName}
		  , 0	
		  , #{insertId}
		  , now()
		  , #{updateId}
		  , now()
		 )
		 <selectKey resultType="Long" keyProperty="companyId" order="AFTER">
			SELECT MAX(COMPANY_ID) AS COMPANYID FROM RFT_COMPANY 
		</selectKey>
	</insert>
	
	<insert id="insertWorkplace" parameterType="subscriberParameter">
		INSERT INTO RFT_WORKPLACE
		(
			COMPANY_ID
		  , WORKPLACE_NAME
		  , SCALE_001_CD
		  , SECTOR_002_CD
		  , REGIST_NO
		  , CONTRACT_AMOUNT
		  , CONTRACT_START_DATE
		  , CONTRACT_END_DATE
		  , CONTRACT_FILE_ID
		  , IS_ENABLE
		  , INSERT_ID
		  , INSERT_DATE
		  , LAST_UPDATE_ID
		  , LAST_UPDATE_DATE
          , CONTRACT_DAY
		)
		VALUES
		(
			#{companyId}
		  , #{workplaceName}
		  , #{scaleCd}
		  , #{sectorCd}
		  , #{registNo}
		  , #{contractAmount}
		  , #{contractStartDate}::timestamp
		  , #{contractEndDate}::timestamp
		  , #{contractFileId}
		  , #{statusCd}
		  , #{insertId}
		  , now()
		  , #{updateId}
		  , now()
			<choose>
				<when test="contractDay != null and contractDay != '' ">
					, #{contractDay}::timestamp
				</when>
				<otherwise>
					, null
				</otherwise>			
			</choose>				  
		)
		<selectKey resultType="Long" keyProperty="workplaceId" order="AFTER">
			select max(workplace_id) as workplaceId from rft_workplace 
		</selectKey>
	</insert>
	
	<insert id="insertSubWorkplace" parameterType="subscriberParameter">
		INSERT INTO RFT_WORKPLACE
		(
			COMPANY_ID
		  , WORKPLACE_ID			
		  , WORKPLACE_NAME
		  , SCALE_001_CD
		  , SECTOR_002_CD
		  , REGIST_NO
		  , CONTRACT_AMOUNT
		  , CONTRACT_START_DATE
		  , CONTRACT_END_DATE
		  , CONTRACT_FILE_ID
		  , IS_ENABLE
		  , INSERT_ID
		  , INSERT_DATE
		  , LAST_UPDATE_ID
		  , LAST_UPDATE_DATE
       	  , CONTRACT_DAY
		)
		VALUES
		(
			#{companyId}
		  , #{workplaceId}
		  , #{workplaceName}
		  , #{scaleCd}
		  , #{sectorCd}
		  , #{registNo}
		  , #{contractAmount}
		  , #{contractStartDate}::timestamp
		  , #{contractEndDate}::timestamp
		  , #{contractFileId}
		  , #{statusCd}
		  , #{insertId}
		  , now()
		  , #{updateId}
		  , now()
			<choose>
				<when test="contractDay != null and contractDay != '' ">
					, #{contractDay}::timestamp
				</when>
				<otherwise>
					, null
				</otherwise>			
			</choose>	
		)
	</insert>	
	
	<insert id="insertUser" parameterType="subscriberParameter">
		INSERT INTO RFT_USER
		(
			COMPANY_ID
		  , USER_NAME
		  , EMAIL
		  , TEL
		  , WORKPLACE_ID
		  , ROLE_003_CD
		  , IS_ENABLE
		  , INSERT_ID
		  , INSERT_DATE
		  , LAST_UPDATE_ID
		  , LAST_UPDATE_DATE
		  , LOGIN_ID
		  , PWD
		  , LAST_LOGIN_DATE
		)
		VALUES
		(
			#{companyId}
		  , #{managerName}
		  , #{managerEmail}
		  , #{managerTel}
		  , #{workplaceId}
		  , #{managerRoleCd}
		  , 1
		  , #{insertId}
		  , now()
		  ,	#{updateId}
		  , now()
		  , #{loginId}
		  , #{pwd}
		  , null
		)
		<selectKey resultType="Long" keyProperty="userId" order="AFTER">
			select max(user_id) as userId from rft_user 
		</selectKey>
	</insert>
	
	<select id="getSubscriberCompany" parameterType="HashMap" resultType="subscriber">
	    SELECT 
			   RC.COMPANY_ID
			 , RC.COMPANY_NAME
			 , RW.REGIST_NO 
			 , RW.WORKPLACE_ID
			 , RW.WORKPLACE_NAME
			 , GET_COMM_NM('001',RW.SCALE_001_CD) AS SCALE
			 , RW.SCALE_001_CD AS SCALE_CD
			 , GET_COMM_NM('002',RW.SECTOR_002_CD) AS SECTOR
			 , RW.SECTOR_002_CD AS SECTOR_CD
			 , RU.USER_ID
			 , RU.LOGIN_ID
			 , GET_COMM_NM('003',RU.ROLE_003_CD) AS MANAGER_ROLE
			 , RU.ROLE_003_CD AS MANAGER_ROLE_CD
			 , RU.USER_NAME AS MANAGER_NAME
			 , RU.TEL  AS MANAGER_TEL
			 , RU.EMAIL AS MANAGER_EMAIL
			 , RW.CONTRACT_AMOUNT
			 , TO_CHAR(RW.CONTRACT_START_DATE, 'YYYY-MM-DD') as CONTRACT_START_DATE 
			 , TO_CHAR(RW.CONTRACT_END_DATE, 'YYYY-MM-DD') as CONTRACT_END_DATE 
			 , (CASE WHEN RW.IS_ENABLE = 1 THEN '사용' ELSE '사용중지' END) AS STATUS
			 , RW.IS_ENABLE as STATUS_CD
			 , RW.CONTRACT_FILE_ID
			 , TO_CHAR(RW.CONTRACT_DAY, 'YYYY-MM-DD')AS CONTRACT_DAY
		  FROM RFT_COMPANY RC 
		  JOIN RFT_WORKPLACE RW ON RC.COMPANY_ID = RW.COMPANY_ID 
		  JOIN RFT_USER RU ON RW.WORKPLACE_ID = RU.WORKPLACE_ID 
		  AND RU.COMPANY_ID = RC.COMPANY_ID 
		 WHERE RW.WORKPLACE_ID = #{workplaceId}
		   AND RU.USER_ID = #{userId}
		   ORDER BY RW.CONTRACT_DAY DESC
	</select>
	
	<update id="updateCompany" parameterType="subscriberParameter">
		UPDATE RFT_COMPANY
		   SET COMPANY_NAME = #{companyName}
		     , CEO_ID = #{userId}
		 WHERE COMPANY_ID = #{companyId}   
	</update>
	
	<update id="updateWorkplace" parameterType="subscriberParameter">
		UPDATE RFT_WORKPLACE
		   SET WORKPLACE_NAME = #{workplaceName}
		     , SCALE_001_CD = #{scaleCd}
		     , SECTOR_002_CD = #{sectorCd}
		     , REGIST_NO = #{registNo}
		     , CONTRACT_AMOUNT = #{contractAmount}
		     , CONTRACT_START_DATE = #{contractStartDate}::timestamp
		     , CONTRACT_END_DATE = #{contractEndDate}::timestamp
		     , CONTRACT_FILE_ID = #{contractFileId}
			 , IS_ENABLE = #{statusCd}
			<choose>
				<when test="contractDay != null and contractDay != '' ">
					, CONTRACT_DAY = #{contractDay}::timestamp
				</when>
				<otherwise>
					, CONTRACT_DAY = null
				</otherwise>			
			</choose>			 
		 WHERE WORKPLACE_ID = #{workplaceId}  
	</update>
	
	<update id="updateUser" parameterType="subscriberParameter">
		UPDATE RFT_USER
		   SET LOGIN_ID = #{loginId}
		     , ROLE_003_CD = #{managerRoleCd}
		     , USER_NAME = #{managerName}
		     , TEL = #{managerTel}
		     , EMAIL = #{managerEmail}
		     , WORKPLACE_ID = #{workplaceId}
		 WHERE USER_ID = #{userId}
	</update>
	
	<select id="getSelectCompany" parameterType="HashMap" resultType="subscriber">
		SELECT 
			   RC.COMPANY_NAME  
			 , RC.COMPANY_ID 
			 , RU.USER_NAME AS MANAGER_NAME
		  FROM RFT_COMPANY RC 
		  JOIN RFT_USER RU ON (RC.CEO_ID = RU.USER_ID)
	</select>	
	
	<select id="getSearchCompany" parameterType="HashMap" resultType="subscriber">
		SELECT 
			   RC.COMPANY_NAME  
			 , RC.COMPANY_ID 
			 , RU.USER_NAME AS MANAGER_NAME
		  FROM RFT_COMPANY RC 
		  JOIN RFT_USER RU ON (RC.CEO_ID = RU.USER_ID)
		 WHERE  1 = 1
		   AND RC.COMPANY_NAME LIKE '%${companyName}%'
		 <if test="managerName != null and managerName != '' ">
		   AND RU.USER_NAME = #{managerName}
		 </if>
	</select>
	
	<select id="getSearchWorkplace" parameterType="HashMap" resultType="subscriber">
		SELECT 
			   RW.REGIST_NO 
			 , RW.WORKPLACE_ID
			 , RW.WORKPLACE_NAME
			 , GET_COMM_NM('001',RW.SCALE_001_CD) AS scale
			 , RW.SCALE_001_CD
			 , GET_COMM_NM('002',RW.SECTOR_002_CD) AS SECTOR
			 , RW.SECTOR_002_CD
			 , RW.CONTRACT_AMOUNT
			 , TO_CHAR(RW.CONTRACT_START_DATE, 'YYYY-MM-DD') as contract_start_date 
			 , TO_CHAR(RW.CONTRACT_END_DATE, 'YYYY-MM-DD') as contract_end_date 
			 , (CASE WHEN RW.IS_ENABLE = 1 THEN '사용' ELSE '사용중지' END) AS STATUS
			 , RW.IS_ENABLE as STATUS_CD
			 , RW.CONTRACT_FILE_ID
			 , TO_CHAR(RW.CONTRACT_DAY, 'YYYY-MM-DD')AS CONTRACT_DAY
		  FROM RFT_WORKPLACE RW 
		 WHERE RW.company_id = #{companyId}
		   and RW.workplace_name like '%${workplaceName}%'
	</select>
	
	<update id="updateCeoId" parameterType="subscriberParameter">
		UPDATE RFT_COMPANY
		   SET CEO_ID = #{userId}
		 WHERE COMPANY_ID = #{companyId}   
	</update>
	
	
	<!--중복아이디 체크-->
	<select id="getLoginIdCnt" parameterType="subscriberParameter"
			resultType="int">		
		SELECT COUNT(*)
		FROM RISK_FREE.RFT_USER
		WHERE LOGIN_ID = #{loginId}
	</select>	
		
		
	<delete id="deleteUser" parameterType="subscriberParameter">
		DELETE FROM RFT_USER WHERE LOGIN_ID = #{loginId}
	</delete>			
	
	
</mapper>